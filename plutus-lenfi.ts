// deno-lint-ignore-file
import { applyParamsToScript, Data, Validator } from "translucent-cardano";

export interface CollateralSpend {
  new (collateralScriptParams: {
    poolScriptHash: string;
    liquidationsPkh: string;
    paramMergeScriptHash: string;
  }): Validator;
  datum: {
    poolNftName: string;
    loanCs: { policyId: string; assetName: string };
    loanAmount: bigint;
    poolConfig: {
      liquidationThreshold: bigint;
      initialCollateralRatio: bigint;
      poolFee: bigint;
      loanFeeDetails: {
        tier_1Fee: bigint;
        tier_1Threshold: bigint;
        tier_2Fee: bigint;
        tier_2Threshold: bigint;
        tier_3Fee: bigint;
        tier_3Threshold: bigint;
        liquidationFee: bigint;
        platformFeeCollectorAddress: {
          paymentCredential:
            | { VerificationKeyCredential: [string] }
            | { ScriptCredential: [string] };
          stakeCredential:
            | {
                Inline: [
                  | { VerificationKeyCredential: [string] }
                  | { ScriptCredential: [string] },
                ];
              }
            | {
                Pointer: {
                  slotNumber: bigint;
                  transactionIndex: bigint;
                  certificateIndex: bigint;
                };
              }
            | null;
        };
      };
      mergeActionFee: bigint;
      minTransition: bigint;
      minLoan: bigint;
      minFee: bigint;
      minLiquidationFee: bigint;
      interestParams: {
        optimalUtilization: bigint;
        baseInterestRate: bigint;
        rslope1: bigint;
        rslope2: bigint;
      };
    };
    collateralCs: { policyId: string; assetName: string };
    collateralAmount: bigint;
    interestRate: bigint;
    lentOut: bigint;
    balance: bigint;
    depositTime: bigint;
    borrowerTn: string;
    oracleCollateralAsset: { policyId: string; assetName: string };
    oracleLoanAsset: { policyId: string; assetName: string };
    tag: { transactionId: { hash: string }; outputIndex: bigint } | null;
  };
  redeemer: {
    wrapper: {
      action: "CollateralRepay" | { CollateralLiquidate: [bigint] };
      interest: bigint;
      mergeType:
        | {
            ImmediateWithPool: [
              { transactionId: { hash: string }; outputIndex: bigint },
            ];
          }
        | {
            DelayedIntoPool: [{ outputIndex: bigint; amountRepaying: bigint }];
          };
    };
  };
}

export const CollateralSpend = Object.assign(
  function (collateralScriptParams: {
    poolScriptHash: string;
    liquidationsPkh: string;
    paramMergeScriptHash: string;
  }) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "",
        [collateralScriptParams],
        {
          dataType: "list",
          items: [
            {
              title: "CollateralParams",
              anyOf: [
                {
                  title: "CollateralParams",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "poolScriptHash" },
                    { dataType: "bytes", title: "liquidationsPkh" },
                    { dataType: "bytes", title: "paramMergeScriptHash" },
                  ],
                },
              ],
            },
          ],
        } as any,
      ),
    };
  },
  {
    datum: {
      title: "CollateralDatum",
      anyOf: [
        {
          title: "CollateralDatum",
          dataType: "constructor",
          index: 0,
          fields: [
            { dataType: "bytes", title: "poolNftName" },
            {
              title: "loanCs",
              description:
                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
              anyOf: [
                {
                  title: "AssetClass",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "policyId" },
                    { dataType: "bytes", title: "assetName" },
                  ],
                },
              ],
            },
            { dataType: "integer", title: "loanAmount" },
            {
              title: "poolConfig",
              anyOf: [
                {
                  title: "Config",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "integer", title: "liquidationThreshold" },
                    { dataType: "integer", title: "initialCollateralRatio" },
                    { dataType: "integer", title: "poolFee" },
                    {
                      title: "loanFeeDetails",
                      anyOf: [
                        {
                          title: "PlatformFeeDetails",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "integer", title: "tier_1Fee" },
                            { dataType: "integer", title: "tier_1Threshold" },
                            { dataType: "integer", title: "tier_2Fee" },
                            { dataType: "integer", title: "tier_2Threshold" },
                            { dataType: "integer", title: "tier_3Fee" },
                            { dataType: "integer", title: "tier_3Threshold" },
                            { dataType: "integer", title: "liquidationFee" },
                            {
                              title: "platformFeeCollectorAddress",
                              description:
                                "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
                              anyOf: [
                                {
                                  title: "Address",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    {
                                      title: "paymentCredential",
                                      description:
                                        "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                                      anyOf: [
                                        {
                                          title: "VerificationKeyCredential",
                                          dataType: "constructor",
                                          index: 0,
                                          fields: [{ dataType: "bytes" }],
                                        },
                                        {
                                          title: "ScriptCredential",
                                          dataType: "constructor",
                                          index: 1,
                                          fields: [{ dataType: "bytes" }],
                                        },
                                      ],
                                    },
                                    {
                                      title: "stakeCredential",
                                      anyOf: [
                                        {
                                          title: "Some",
                                          description: "An optional value.",
                                          dataType: "constructor",
                                          index: 0,
                                          fields: [
                                            {
                                              description:
                                                "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
                                              anyOf: [
                                                {
                                                  title: "Inline",
                                                  dataType: "constructor",
                                                  index: 0,
                                                  fields: [
                                                    {
                                                      description:
                                                        "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                                                      anyOf: [
                                                        {
                                                          title:
                                                            "VerificationKeyCredential",
                                                          dataType:
                                                            "constructor",
                                                          index: 0,
                                                          fields: [
                                                            {
                                                              dataType: "bytes",
                                                            },
                                                          ],
                                                        },
                                                        {
                                                          title:
                                                            "ScriptCredential",
                                                          dataType:
                                                            "constructor",
                                                          index: 1,
                                                          fields: [
                                                            {
                                                              dataType: "bytes",
                                                            },
                                                          ],
                                                        },
                                                      ],
                                                    },
                                                  ],
                                                },
                                                {
                                                  title: "Pointer",
                                                  dataType: "constructor",
                                                  index: 1,
                                                  fields: [
                                                    {
                                                      dataType: "integer",
                                                      title: "slotNumber",
                                                    },
                                                    {
                                                      dataType: "integer",
                                                      title: "transactionIndex",
                                                    },
                                                    {
                                                      dataType: "integer",
                                                      title: "certificateIndex",
                                                    },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                        {
                                          title: "None",
                                          description: "Nothing.",
                                          dataType: "constructor",
                                          index: 1,
                                          fields: [],
                                        },
                                      ],
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    { dataType: "integer", title: "mergeActionFee" },
                    { dataType: "integer", title: "minTransition" },
                    { dataType: "integer", title: "minLoan" },
                    { dataType: "integer", title: "minFee" },
                    { dataType: "integer", title: "minLiquidationFee" },
                    {
                      title: "interestParams",
                      anyOf: [
                        {
                          title: "InterestParams",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              dataType: "integer",
                              title: "optimalUtilization",
                            },
                            { dataType: "integer", title: "baseInterestRate" },
                            { dataType: "integer", title: "rslope1" },
                            { dataType: "integer", title: "rslope2" },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              title: "collateralCs",
              description:
                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
              anyOf: [
                {
                  title: "AssetClass",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "policyId" },
                    { dataType: "bytes", title: "assetName" },
                  ],
                },
              ],
            },
            { dataType: "integer", title: "collateralAmount" },
            { dataType: "integer", title: "interestRate" },
            { dataType: "integer", title: "lentOut" },
            { dataType: "integer", title: "balance" },
            { dataType: "integer", title: "depositTime" },
            { dataType: "bytes", title: "borrowerTn" },
            {
              title: "oracleCollateralAsset",
              description:
                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
              anyOf: [
                {
                  title: "AssetClass",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "policyId" },
                    { dataType: "bytes", title: "assetName" },
                  ],
                },
              ],
            },
            {
              title: "oracleLoanAsset",
              description:
                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
              anyOf: [
                {
                  title: "AssetClass",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "policyId" },
                    { dataType: "bytes", title: "assetName" },
                  ],
                },
              ],
            },
            {
              title: "tag",
              anyOf: [
                {
                  title: "Some",
                  description: "An optional value.",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      description:
                        "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
                      anyOf: [
                        {
                          title: "OutputReference",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              title: "transactionId",
                              description:
                                "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                              anyOf: [
                                {
                                  title: "TransactionId",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    { dataType: "bytes", title: "hash" },
                                  ],
                                },
                              ],
                            },
                            { dataType: "integer", title: "outputIndex" },
                          ],
                        },
                      ],
                    },
                  ],
                },
                {
                  title: "None",
                  description: "Nothing.",
                  dataType: "constructor",
                  index: 1,
                  fields: [],
                },
              ],
            },
          ],
        },
      ],
    },
  },
  {
    redeemer: {
      title: "Wrapped Redeemer",
      description:
        "A redeemer wrapped in an extra constructor to make multi-validator detection possible on-chain.",
      anyOf: [
        {
          dataType: "constructor",
          index: 1,
          fields: [
            {
              anyOf: [
                {
                  title: "CollateralRedeemer",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "action",
                      anyOf: [
                        {
                          title: "CollateralRepay",
                          dataType: "constructor",
                          index: 0,
                          fields: [],
                        },
                        {
                          title: "CollateralLiquidate",
                          dataType: "constructor",
                          index: 1,
                          fields: [{ dataType: "integer" }],
                        },
                      ],
                    },
                    { dataType: "integer", title: "interest" },
                    {
                      title: "mergeType",
                      anyOf: [
                        {
                          title: "ImmediateWithPool",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              description:
                                "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
                              anyOf: [
                                {
                                  title: "OutputReference",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    {
                                      title: "transactionId",
                                      description:
                                        "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                                      anyOf: [
                                        {
                                          title: "TransactionId",
                                          dataType: "constructor",
                                          index: 0,
                                          fields: [
                                            {
                                              dataType: "bytes",
                                              title: "hash",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                    {
                                      dataType: "integer",
                                      title: "outputIndex",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                        {
                          title: "DelayedIntoPool",
                          dataType: "constructor",
                          index: 1,
                          fields: [
                            {
                              anyOf: [
                                {
                                  title: "DelayedMergeValues",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    {
                                      dataType: "integer",
                                      title: "outputIndex",
                                    },
                                    {
                                      dataType: "integer",
                                      title: "amountRepaying",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
    },
  },
) as unknown as CollateralSpend;

export interface CollateralMint {
  new (collateralScriptParams: {
    poolScriptHash: string;
    liquidationsPkh: string;
    paramMergeScriptHash: string;
  }): Validator;
  redeemer: {
    mints: Array<{
      outputReference: { transactionId: { hash: string }; outputIndex: bigint };
      outputPointer: bigint;
    }>;
    burns: Array<{ tokenName: string }>;
  };
}

export const CollateralMint = Object.assign(
  function (collateralScriptParams: {
    poolScriptHash: string;
    liquidationsPkh: string;
    paramMergeScriptHash: string;
  }) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "",
        [collateralScriptParams],
        {
          dataType: "list",
          items: [
            {
              title: "CollateralParams",
              anyOf: [
                {
                  title: "CollateralParams",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "poolScriptHash" },
                    { dataType: "bytes", title: "liquidationsPkh" },
                    { dataType: "bytes", title: "paramMergeScriptHash" },
                  ],
                },
              ],
            },
          ],
        } as any,
      ),
    };
  },

  {
    redeemer: {
      title: "CollateralNFTRedeemerLists",
      anyOf: [
        {
          title: "CollateralNFTRedeemerLists",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              dataType: "list",
              items: {
                title: "MintNFTElem",
                anyOf: [
                  {
                    title: "MintNFTElem",
                    dataType: "constructor",
                    index: 0,
                    fields: [
                      {
                        title: "outputReference",
                        description:
                          "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
                        anyOf: [
                          {
                            title: "OutputReference",
                            dataType: "constructor",
                            index: 0,
                            fields: [
                              {
                                title: "transactionId",
                                description:
                                  "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                                anyOf: [
                                  {
                                    title: "TransactionId",
                                    dataType: "constructor",
                                    index: 0,
                                    fields: [
                                      { dataType: "bytes", title: "hash" },
                                    ],
                                  },
                                ],
                              },
                              { dataType: "integer", title: "outputIndex" },
                            ],
                          },
                        ],
                      },
                      { dataType: "integer", title: "outputPointer" },
                    ],
                  },
                ],
              },
              title: "mints",
            },
            {
              dataType: "list",
              items: {
                title: "BurnNFTElem",
                anyOf: [
                  {
                    title: "BurnNFTElem",
                    dataType: "constructor",
                    index: 0,
                    fields: [{ dataType: "bytes", title: "tokenName" }],
                  },
                ],
              },
              title: "burns",
            },
          ],
        },
      ],
    },
  },
) as unknown as CollateralMint;

export interface DelayedMergeSpend {
  new (poolScriptHash: string): Validator;
  _datum: {
    borrowerTn: string;
    poolNftName: string;
    repayAmount: bigint;
    loanAmount: bigint;
    collateralOref: { transactionId: { hash: string }; outputIndex: bigint };
  };
  _r: { wrapper: Data };
}

export const DelayedMergeSpend = Object.assign(
  function (poolScriptHash: string) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "59088f01000032323232323232322322253232323330083001300a3754008264a6660126464646464a6646601e600260226ea80144c94ccc040c024c048dd5000899191919299980a1806980b1baa001132533301530103017375400226464a666036603c0042646464a666034602660386ea80044c94ccc06cc034c074dd500089919191919192999810a99981099b87375a604e00c666004008900011192999812180b18131baa001132323253330273371090001bad3001302a3754006266e00dd6980098151baa003005162302d302e302e302e0013007001302a302737540022c605260546054604c6ea8c0a4c0a8c098dd50010a511533022491166c6f616e5f616d745f636865636b203f2046616c73650014a02a666042002294454cc08924011772657061795f616d745f636865636b203f2046616c73650014a02940cdc39bad302630270053330010034800088c94ccc08cc054c094dd500089919299981299b8848000dd6980498141baa0021337006eb4c024c0a0dd50010020b1803000981498131baa001163028302930293025375460506052604a6ea8008888c8ccc00400401000c8894ccc0a400840044ccc00c00cc0b0008cc010c0ac00800494ccc07cc060c084dd50008991919191919191919192999816981800109924c60240022c605c002605c0046eb4c0b0004c0b0008dd6981500098150011bae30280013028002375c604c00260446ea800458c8cc004004048894ccc08c00452f5c026464a66604264a666044002264a666046602a604a6ea80044c94ccc090c074c098dd50008991919191919191919192999819181a80109919299981829998180078a51153303149011969735f6f776e5f63726564656e7469616c203f2046616c73650014a02a666060002294454cc0c5240116706f6f6c5f6e66745f6d61746368203f2046616c73650014a02940cdc7804013980b8008b181980098198011bad30310013031002375a605e002605e0046eb8c0b4004c0b4008dd7181580098139baa001163029302637540022c600c604a6ea8c044c094dd50018a503375e601e60486ea8c03cc090dd5180818121baa00201113302600233004004001133004004001302700230250012302330243024001301e37540022940c080c074dd50008a503007301c3754006a666030602260346ea80084c8c8c8c8c8c94ccc088c0940084c8c8c926325333021301a001132325333027302a002132498c03000458c0a0004c090dd50020a999810980e0008a99981298121baa00414985858c088dd5001980400219299980f980c000899192999812981400109924c64a6660446036002264646464a666054605a0042930b1bad302b001302b002375a6052002604a6ea800854ccc088c0740044c8c8c8c8c8c8c8c8c8c94ccc0c0c0cc00852616375a606200260620046eb4c0bc004c0bc008dd7181680098168011bad302b001302b002375a6052002604a6ea800854ccc088c0500044c8c8c8c8c8c94ccc0b0c0bc00852616375a605a002605a0046eb4c0ac004c0ac008dd6981480098129baa002153330223370e9003000899191919299981518168010a4c2c6eb4c0ac004c0ac008dd6981480098129baa00216302337540022c604c00260446ea801854ccc07cc06800454ccc08cc088dd50030a4c2c2c60406ea801458c08c004c08c008c084004c084008c07c004c06cdd50010b1299980c1808980d1baa001132323232533302030230021324994ccc070c054c078dd500189919299981118128010a4c2c6eb8c08c004c07cdd50018b0b1bad30210013021002301f001301b37540022c2c603800260306ea800458c068c05cdd50008b19191980080080411299980d0008a6103d87a8000132323253330193375e00c6036006260266603c00297ae0133005005002301b002301e002301c0013374a90011980c1800980b1baa325333014300d3016375400226034602e6ea800458c8cc004004020894ccc0640045300103d87a800013232533301730123253330183013301a37540022900009bad301e301b375400264a666030602660346ea80045300103d87a8000132330010013756603e60386ea8008894ccc078004530103d87a80001323232533301d3371e02a6eb8c07c00c4c05ccc088dd4000a5eb804cc014014008dd6980f8011811001181000099198008009bab3007301b3754600e60366ea800c894ccc074004530103d87a80001323232533301c3371e0346eb8c07800c4c058cc084dd3000a5eb804cc014014008dd5980f0011810801180f800898089980e00125eb804cc010010004c074008c06c0052f5c046032002460306032002602c60266ea800458c054c048dd50029b874801058dd59809980a180a180a180a180a180a180a180a180a0011bac3012001300e375460220046020602200260186ea801452613656375c00a266444a6660166464646464a666020601660246ea80104c8c8c94ccc04cc030c054dd5000899191980080080311299980d0008a5013253330173375e0086032603a00429444cc00c00c004c074004c034cc060c008c058dd51801180b1baa3019301a301637546032602c6ea80052f5c02c646600200200a44a666030002298103d87a80001323253330163375e600a60326ea80080184c040cc06c0092f5c02660080080026038004603400246030002602c60266ea801058dd5980a980b180b180b180b180b180b0011bac301400130103754602600460246026002601c6ea80045261365653330083001300a375400a264646464646464646464a66602c60320042649329998091805980a1baa001132323232533301a301d0021324994ccc058c03cc060dd500189919299980e180f8010a4c2c6eb8c074004c064dd50018b0b1bad301b001301b0023019001301537540022c2c602e002602e0046eb4c054004c054008dd6980980098098011bae30110013011002375c601e00260166ea801458c038c02cdd50021b8748000dd2a40006e1d2002375c002ae695ce2ab9d5573caae7d5d02ba15745",
        [poolScriptHash],
        { dataType: "list", items: [{ dataType: "bytes" }] } as any,
      ),
    };
  },
  {
    _datum: {
      title: "MergeDatum",
      anyOf: [
        {
          title: "MergeDatum",
          dataType: "constructor",
          index: 0,
          fields: [
            { dataType: "bytes", title: "borrowerTn" },
            { dataType: "bytes", title: "poolNftName" },
            { dataType: "integer", title: "repayAmount" },
            { dataType: "integer", title: "loanAmount" },
            {
              title: "collateralOref",
              description:
                "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
              anyOf: [
                {
                  title: "OutputReference",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "transactionId",
                      description:
                        "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                      anyOf: [
                        {
                          title: "TransactionId",
                          dataType: "constructor",
                          index: 0,
                          fields: [{ dataType: "bytes", title: "hash" }],
                        },
                      ],
                    },
                    { dataType: "integer", title: "outputIndex" },
                  ],
                },
              ],
            },
          ],
        },
      ],
    },
  },
  {
    _r: {
      title: "Wrapped Redeemer",
      description:
        "A redeemer wrapped in an extra constructor to make multi-validator detection possible on-chain.",
      anyOf: [
        {
          dataType: "constructor",
          index: 1,
          fields: [{ description: "Any Plutus data." }],
        },
      ],
    },
  },
) as unknown as DelayedMergeSpend;

export interface DelayedMergeWithdrawValidate {
  new (poolScriptHash: string): Validator;
  poolNftNameRedeemer: string;
}

export const DelayedMergeWithdrawValidate = Object.assign(
  function (poolScriptHash: string) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "59088f01000032323232323232322322253232323330083001300a3754008264a6660126464646464a6646601e600260226ea80144c94ccc040c024c048dd5000899191919299980a1806980b1baa001132533301530103017375400226464a666036603c0042646464a666034602660386ea80044c94ccc06cc034c074dd500089919191919192999810a99981099b87375a604e00c666004008900011192999812180b18131baa001132323253330273371090001bad3001302a3754006266e00dd6980098151baa003005162302d302e302e302e0013007001302a302737540022c605260546054604c6ea8c0a4c0a8c098dd50010a511533022491166c6f616e5f616d745f636865636b203f2046616c73650014a02a666042002294454cc08924011772657061795f616d745f636865636b203f2046616c73650014a02940cdc39bad302630270053330010034800088c94ccc08cc054c094dd500089919299981299b8848000dd6980498141baa0021337006eb4c024c0a0dd50010020b1803000981498131baa001163028302930293025375460506052604a6ea8008888c8ccc00400401000c8894ccc0a400840044ccc00c00cc0b0008cc010c0ac00800494ccc07cc060c084dd50008991919191919191919192999816981800109924c60240022c605c002605c0046eb4c0b0004c0b0008dd6981500098150011bae30280013028002375c604c00260446ea800458c8cc004004048894ccc08c00452f5c026464a66604264a666044002264a666046602a604a6ea80044c94ccc090c074c098dd50008991919191919191919192999819181a80109919299981829998180078a51153303149011969735f6f776e5f63726564656e7469616c203f2046616c73650014a02a666060002294454cc0c5240116706f6f6c5f6e66745f6d61746368203f2046616c73650014a02940cdc7804013980b8008b181980098198011bad30310013031002375a605e002605e0046eb8c0b4004c0b4008dd7181580098139baa001163029302637540022c600c604a6ea8c044c094dd50018a503375e601e60486ea8c03cc090dd5180818121baa00201113302600233004004001133004004001302700230250012302330243024001301e37540022940c080c074dd50008a503007301c3754006a666030602260346ea80084c8c8c8c8c8c94ccc088c0940084c8c8c926325333021301a001132325333027302a002132498c03000458c0a0004c090dd50020a999810980e0008a99981298121baa00414985858c088dd5001980400219299980f980c000899192999812981400109924c64a6660446036002264646464a666054605a0042930b1bad302b001302b002375a6052002604a6ea800854ccc088c0740044c8c8c8c8c8c8c8c8c8c94ccc0c0c0cc00852616375a606200260620046eb4c0bc004c0bc008dd7181680098168011bad302b001302b002375a6052002604a6ea800854ccc088c0500044c8c8c8c8c8c94ccc0b0c0bc00852616375a605a002605a0046eb4c0ac004c0ac008dd6981480098129baa002153330223370e9003000899191919299981518168010a4c2c6eb4c0ac004c0ac008dd6981480098129baa00216302337540022c604c00260446ea801854ccc07cc06800454ccc08cc088dd50030a4c2c2c60406ea801458c08c004c08c008c084004c084008c07c004c06cdd50010b1299980c1808980d1baa001132323232533302030230021324994ccc070c054c078dd500189919299981118128010a4c2c6eb8c08c004c07cdd50018b0b1bad30210013021002301f001301b37540022c2c603800260306ea800458c068c05cdd50008b19191980080080411299980d0008a6103d87a8000132323253330193375e00c6036006260266603c00297ae0133005005002301b002301e002301c0013374a90011980c1800980b1baa325333014300d3016375400226034602e6ea800458c8cc004004020894ccc0640045300103d87a800013232533301730123253330183013301a37540022900009bad301e301b375400264a666030602660346ea80045300103d87a8000132330010013756603e60386ea8008894ccc078004530103d87a80001323232533301d3371e02a6eb8c07c00c4c05ccc088dd4000a5eb804cc014014008dd6980f8011811001181000099198008009bab3007301b3754600e60366ea800c894ccc074004530103d87a80001323232533301c3371e0346eb8c07800c4c058cc084dd3000a5eb804cc014014008dd5980f0011810801180f800898089980e00125eb804cc010010004c074008c06c0052f5c046032002460306032002602c60266ea800458c054c048dd50029b874801058dd59809980a180a180a180a180a180a180a180a180a0011bac3012001300e375460220046020602200260186ea801452613656375c00a266444a6660166464646464a666020601660246ea80104c8c8c94ccc04cc030c054dd5000899191980080080311299980d0008a5013253330173375e0086032603a00429444cc00c00c004c074004c034cc060c008c058dd51801180b1baa3019301a301637546032602c6ea80052f5c02c646600200200a44a666030002298103d87a80001323253330163375e600a60326ea80080184c040cc06c0092f5c02660080080026038004603400246030002602c60266ea801058dd5980a980b180b180b180b180b180b0011bac301400130103754602600460246026002601c6ea80045261365653330083001300a375400a264646464646464646464a66602c60320042649329998091805980a1baa001132323232533301a301d0021324994ccc058c03cc060dd500189919299980e180f8010a4c2c6eb8c074004c064dd50018b0b1bad301b001301b0023019001301537540022c2c602e002602e0046eb4c054004c054008dd6980980098098011bae30110013011002375c601e00260166ea801458c038c02cdd50021b8748000dd2a40006e1d2002375c002ae695ce2ab9d5573caae7d5d02ba15745",
        [poolScriptHash],
        { dataType: "list", items: [{ dataType: "bytes" }] } as any,
      ),
    };
  },

  { poolNftNameRedeemer: { dataType: "bytes" } },
) as unknown as DelayedMergeWithdrawValidate;

export interface LeftoversLeftovers {
  new (): Validator;
  datum: { policyId: string; assetName: string };
  _r: undefined;
}

export const LeftoversLeftovers = Object.assign(
  function () {
    return {
      type: "PlutusV2",
      script:
        "59015501000032323232323232232232253330063233223375e6e98c94ccc028cdc3a400460166ea800452f5bded8c026eacc03cc030dd5000991980080099198008008021129998078008a5eb7bdb1804c8c8c8c94ccc040cdc7a45000021003133014337606ea4008dd3000998030030019bab3011003375c601e0046026004602200244a66601c002298103d87a80001323232533300e3371e00c6eb8c03c00c4cdd2a4000660246e980052f5c026600a00a0046eacc03c008c048008c040004dd31980699bb0300e300f0034c10120004bd6f7b6301bab300c300d300d300d300d30093754601860126ea8008dd7180600098041baa00514984d958c94ccc014cdc3a4000600c0022a666010600e0022930b0b1baa00153330023370e900018019baa0011323232325333009300c002149858dd7180500098050011bae3008001300437540022cae6955ceaab9e5573eae815d0aba21",
    };
  },
  {
    datum: {
      title: "AssetClass",
      description:
        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
      anyOf: [
        {
          title: "AssetClass",
          dataType: "constructor",
          index: 0,
          fields: [
            { dataType: "bytes", title: "policyId" },
            { dataType: "bytes", title: "assetName" },
          ],
        },
      ],
    },
  },
  {
    _r: {
      title: "Unit",
      description: "The nullary constructor.",
      anyOf: [{ dataType: "constructor", index: 0, fields: [] }],
    },
  },
) as unknown as LeftoversLeftovers;

export interface LiquidityTokenLiquidityToken {
  new (poolHash: string, tokenName: string): Validator;
  redeemer:
    | {
        TransitionPool: {
          poolOref: { transactionId: { hash: string }; outputIndex: bigint };
          continuingOutput: bigint;
        };
      }
    | { CreatePool: { producedOutput: bigint } }
    | {
        DestroyPool: {
          poolOref: { transactionId: { hash: string }; outputIndex: bigint };
        };
      };
}

export const LiquidityTokenLiquidityToken = Object.assign(
  function (poolHash: string, tokenName: string) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "590ae901000032323232323232322322322323232322533300b3232533300d3005300f37540022646464646464646464646464646464646464a646660406030024264646464a6660486038604c6ea80044c8c94ccc098c078c0a0dd5000899192999814181098151baa0011323232533302b3024302d375400226464646464646464a66606e607400426464a66606a66e1ccdc09bad3026303837540146eb4c098c0e0dd50069bad3038003153330350011533303500515333035006100814a029405280a5053330343371e0026eb8c078c0dcdd5180b181b9baa0091301500114a06eb8c0d400458c0e0004cc074c080dd59810981a1baa30133034375404e048a66606060546660366eacc094c0ccdd5181298199baa00c02e0021302a33301b3756604a60666ea80280b800852819299981a0008a5013253330350011324a06eb0c0dc0084c94ccc0d80044c8c9289bac3039003375860700062a66606c60720022646464944dd6181d0019bac3039003375860700062940c0e0004c0dc004c8cc004004dd5981298199baa30253033375401844a66606a002297ae0132333222323300100100322533303b00110031323303d374e6607a6ea4018cc0f4dd49bae303a0013303d37506eb4c0ec0052f5c066006006607e004607a0026eb8c0d0004dd5981a80099801801981c801181b8009bae301830313754602060626ea8018cdd7980798181baa302230303754012601e60606ea801cc04c004c0c4c0b8dd50008b180718169baa0043010001302e302b37540022c601660546ea8c070c0a8dd5001981618149baa001163300a3758601260506ea8c01cc0a0dd500d801981518139baa00116330063758600a604c6ea8c014c098dd500c919baf3006302737540020066eb4c0a0c0a4008c09c004c08cdd500d8a999810180c809099192999811180d18121baa001132325333024301d30263754002264646464a666050a666050604066e00ccc04cc05cdd5980c18159baa300a302b375403c0360486eb4c064c0acdd50020a511533029490119746f6b656e735f6d696e745f636865636b203f2046616c73650014a02a666050a666050004294454cc0a5241126e6674735f636865636b203f2046616c73650014a02a666050002294454cc0a524011c6e66745f6e616d655f646174756d5f636865636b203f2046616c73650014a0294052818041bae3011302a3754601260546ea800cc080ccc044dd5980d98149baa301b3029375400804804460180026054604e6ea800458c01cc098dd5180c18131baa0013028302537540022c660086eb0c00cc090dd5180198121baa01723375e6008604a6ea8004008c098c08cdd500d8992999810980c98119baa001132325333023301c3025375400226464646464a666058605e004264a66605260466eb4c0b00084c8c8c8c8c8c8c94ccc0c14ccc0c0c0a8ccc06cdd5981298199baa00f02e00814a22a6606292011d636f72726563745f706f6f6c746f6b656e5f6f7574203f2046616c73650014a02a666060a666060008294454cc0c524121636f72726563745f7265636f726465645f6c70746f6b656e73203f2046616c73650014a02a666060a666060006294454cc0c5241176465706f736974696e675f67745f30203f2046616c73650014a02a666060a666060004294454cc0c52411c6465706f736974696e675f61745f736372697074203f2046616c73650014a02a666060a666060002294454cc0c52411f6d696e7465645f6c705f6d617463685f6465706f736974203f2046616c73650014a02a66606000e294454cc0c524011e636f72726563745f706f6f6c746f6b656e5f6e616d65203f2046616c73650014a029405280a5014a02940cdc380200299b87003375a604660626ea802ccdc42400000466e1cdd6980e98179baa00900233301637566040605c6ea8028dd7180698171baa3020302e3754601a605c6ea8020dd7181018171baa3020302e3754601a605c6ea8020ccc0540140740094ccc0a4cdc78009bae3013302c3754601660586ea80184c0280045280b1bae302a00116302d0013301200102430143756602a60506ea8c01cc0a0dd500d9805800981498131baa00116300630253754002604e60486ea800458cc014dd6180218119baa30023023375402c6eb4c098c08cdd500d9b8f01b2302500122323300100100322533302500114c103d87a8000132325333023300500213011330280024bd70099802002000981480118138009181198121812000980080091129998108010a60103d87a800013232533301f30170031300d330240024bd70099980280280099b8000348004c09400cc08c00894ccc068c048c070dd5000899191919191919192999813181480109924ca666044603460486ea801c4c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c94ccc0d8c0e40084c8c8c8c8c8c926301f00a301e00b301d00c301c00d301b00e5333032302a3034375401e264646464a666074607a004264649319299981c181800089919299981f182080109924c64a666076606600226464a66608260880042649318130008b1821000981f1baa0021533303b3035001132323232323253330453048002149858dd6982300098230011bad30440013044002375a6084002607c6ea800858c0f0dd50008b181f800981d9baa0031533303830320011533303c303b37540062930b0b181c9baa002301f00316303b001303b00230390013035375401e2c2c6eb8c0dc004c0dc008dd7181a800981a8011819800981980118188009818801181780098178011816800981680118158009815801181480098129baa0071616375a604e002604e0046eb4c094004c094008dd6981180098118011810800980e9baa00116253330193011301b3754002264646464a66604260480042930b1bae30220013022002375c604000260386ea8004588c94ccc064c0440044c8c94ccc07cc08800852616375c604000260386ea800854ccc064c04c0044c8c94ccc07cc08800852616375c604000260386ea800858c068dd50009180e980f180f180f180f180f180f00091119299980c9809980d9baa0011480004dd6980f980e1baa0013253330193013301b3754002298103d87a80001323300100137566040603a6ea8008894ccc07c004530103d87a80001323232533301e3371e00e6eb8c08000c4c030cc08cdd4000a5eb804cc014014008dd6981000118118011810800998028018011119299980b9808980c9baa00114bd6f7b63009bab301d301a37540026600600400244646600200200644a6660360022980103d87a80001323232533301a3371e00c6eb8c07000c4c020cc07cdd3000a5eb804cc014014008dd5980e001180f801180e8009ba5480008c8cc004004008894ccc06000452f5bded8c0264646464a66603066e3d220100002100313301d337606ea4008dd3000998030030019bab301a003375c6030004603800460340024602e60306030603060300024602c602e602e602e00260206ea8024dd7180998081baa001163001300f375400446024602600229309b2b1919299980598018008991919192999809980b00109924c600c0062c6eb4c050004c050008c048004c038dd50030a9998059802800899192999808980a0010a4c2c6eb4c048004c038dd50030a9998059802000899192999808980a00109924c60080022c6024002601c6ea801858c030dd500292999805180118061baa001132323232533301230150021324994ccc038c018c040dd500189919299980a180b8010a4c2c6eb8c054004c044dd50018b0b1bad301300130130023011001300d37540022c6e1d2000370e90021b8748008dd70009bae0015734ae7155ceaab9e5573eae815d0aba21",
        [poolHash, tokenName],
        {
          dataType: "list",
          items: [{ dataType: "bytes" }, { dataType: "bytes" }],
        } as any,
      ),
    };
  },

  {
    redeemer: {
      title: "TokenRedeemer",
      anyOf: [
        {
          title: "TransitionPool",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              title: "poolOref",
              description:
                "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
              anyOf: [
                {
                  title: "OutputReference",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "transactionId",
                      description:
                        "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                      anyOf: [
                        {
                          title: "TransactionId",
                          dataType: "constructor",
                          index: 0,
                          fields: [{ dataType: "bytes", title: "hash" }],
                        },
                      ],
                    },
                    { dataType: "integer", title: "outputIndex" },
                  ],
                },
              ],
            },
            { dataType: "integer", title: "continuingOutput" },
          ],
        },
        {
          title: "CreatePool",
          dataType: "constructor",
          index: 1,
          fields: [{ dataType: "integer", title: "producedOutput" }],
        },
        {
          title: "DestroyPool",
          dataType: "constructor",
          index: 2,
          fields: [
            {
              title: "poolOref",
              description:
                "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
              anyOf: [
                {
                  title: "OutputReference",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "transactionId",
                      description:
                        "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                      anyOf: [
                        {
                          title: "TransactionId",
                          dataType: "constructor",
                          index: 0,
                          fields: [{ dataType: "bytes", title: "hash" }],
                        },
                      ],
                    },
                    { dataType: "integer", title: "outputIndex" },
                  ],
                },
              ],
            },
          ],
        },
      ],
    },
  },
) as unknown as LiquidityTokenLiquidityToken;

export interface OracleValidatorFeedType {
  new (): Validator;
  _redeemer:
    | {
        Aggregated: [
          {
            token: { policyId: string; assetName: string };
            tokenPriceInLovelaces: bigint;
            denominator: bigint;
            validTo: bigint;
          },
        ];
      }
    | {
        Pooled: [
          {
            token: { policyId: string; assetName: string };
            tokenAAmount: bigint;
            tokenBAmount: bigint;
            validTo: bigint;
          },
        ];
      };
}

export const OracleValidatorFeedType = Object.assign(
  function () {
    return {
      type: "PlutusV2",
      script:
        "590127010000323232323232232253330044a029309b2b19191929998029801800899192999805180600109924ca66600e600a60106ea80044c8c8c8c8c8c8c8c94ccc048c0500084c926300c00716375a602400260240046eb4c040004c040008dd698070009807001180600098049baa0011616300a001300737540082a66600a66e1d200200113232533300a300c0021324994ccc01cc014c020dd5000899191919191919192999809180a00109924c601800e2c6eb4c048004c048008dd6980800098080011bad300e001300e002300c001300937540022c2c6014002600e6ea801058c014dd500192999802180118029baa001132323232533300b300d002149858dd7180580098058011bae3009001300637540022c6e1d20005734aae7555cf2ab9f5742ae881",
    };
  },

  {
    _redeemer: {
      title: "OraclePriceFeed",
      anyOf: [
        {
          title: "Aggregated",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              anyOf: [
                {
                  title: "AggregatedFeed",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "token",
                      description:
                        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                      anyOf: [
                        {
                          title: "AssetClass",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "bytes", title: "policyId" },
                            { dataType: "bytes", title: "assetName" },
                          ],
                        },
                      ],
                    },
                    { dataType: "integer", title: "tokenPriceInLovelaces" },
                    { dataType: "integer", title: "denominator" },
                    { dataType: "integer", title: "validTo" },
                  ],
                },
              ],
            },
          ],
        },
        {
          title: "Pooled",
          dataType: "constructor",
          index: 1,
          fields: [
            {
              anyOf: [
                {
                  title: "PooledFeed",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "token",
                      description:
                        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                      anyOf: [
                        {
                          title: "AssetClass",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "bytes", title: "policyId" },
                            { dataType: "bytes", title: "assetName" },
                          ],
                        },
                      ],
                    },
                    { dataType: "integer", title: "tokenAAmount" },
                    { dataType: "integer", title: "tokenBAmount" },
                    { dataType: "integer", title: "validTo" },
                  ],
                },
              ],
            },
          ],
        },
      ],
    },
  },
) as unknown as OracleValidatorFeedType;

export interface OracleValidatorSpend {
  new (
    verificationKeys: Array<string>,
    threshold: bigint,
    _oracleAsset: { policyId: string; assetName: string },
    governanceToken: { policyId: string; assetName: string },
  ): Validator;
  _datum: Data;
  _r: { wrapper: Data };
}

export const OracleValidatorSpend = Object.assign(
  function (
    verificationKeys: Array<string>,
    threshold: bigint,
    _oracleAsset: { policyId: string; assetName: string },
    governanceToken: { policyId: string; assetName: string },
  ) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "5904fe010000323232323232322322322222532323233300c3003300d3754008264a66601a646464a66602066e1d2004301137540022a666020600e60226ea8c054c048dd500089919b8900d32333001001332300100122533301700114bd700991980c800998018019919800800980e00191299980d0008a5eb804c8c94ccc064ccc064cdd7801002a504a226603a00466008008002266008008002603c004603800260320026eb0c008c050dd5005a4000444a66602e0042002266600600660340046464a66602c601a602e6ea800454ccc058c8ccdca9bae301c301937540046eccc004c064dd50081bae30013019375400646038002266e0000d200210031633323001001222533301b00214c103d87a800013232533301a30110031300f3301e375200497ae01333005005001337000069000980f8019bae301d002013375a600a602e6ea8004c0640088c058c05c0045858c050c054008c04c004c03cdd50028a4c26cac64a66601a6008601c6ea80184c8c8c8c94ccc050c05c0084c8c926323300100100322533301700114984c8cc00c00cc06c008c94ccc054c030c058dd5000899191919299980e180f8010a4c2c6eb4c074004c074008dd7180d800980b9baa0011630190013253330123009001132325333017301a0021324994ccc050c02cc054dd500089919191919191919299980f981100109924c602000e2c6eb4c080004c080008dd6980f000980f0011bad301c001301c002301a001301637540022c2c603000260286ea801054ccc048c0200044c8c94ccc05cc0680084c9265333014300b3015375400226464646464646464a66603e60440042649318080038b1bad30200013020002375a603c002603c0046eb4c070004c070008c068004c058dd50008b0b180c000980a1baa00416301237540062c6eb0c054004c054008c04c004c03cdd50030b12999806980218071baa00113232323253330143017002149858dd7180a800980a8011bae3013001300f37540022c2644a66601c646464646464a6660286014602a6ea8c064c0680184c8cc88c94ccc060c03cc064dd5000899299980c9808180d1baa001132323300100100822533301f00114a0264a66603a66e3cdd718110010020a511330030030013022001375c603c60366ea80044c8c8cc004004024894ccc07c004528099299980e99baf004301e302200214a22660060060026044002601c6603a00297ae0301d301a3754603a60346ea8c074c078c068dd5180e980d1baa00114a0646600200201044a6660380022980103d87a800013232533301b301132533301c3012301d37540022900009bad3021301e375400264a6660386024603a6ea80045300103d87a80001323300100137566044603e6ea8008894ccc084004530103d87a8000132323253330213371e0166eb8c08800c4c058cc094dd4000a5eb804cc014014008dd698110011812801181180099198008009bab3008301e37546010603c6ea800c894ccc080004530103d87a8000132323253330203371e0166eb8c08400c4c054cc090dd3000a5eb804cc014014008dd5981080118120011811000898081980f80125eb804cc010010004c080008c078004dd7180d180b9baa00f375c6002602e6ea803c8c068c06c00458dd6180c180c980c8011bab3017001301730173017301730170023758602a002602a60226ea8c050004c040dd50008a4c26cac6022601c6ea8010dd2a40006e1d2002370e90001bad0013758002ae6955ceaab9e5573eae815d0aba201",
        [verificationKeys, threshold, _oracleAsset, governanceToken],
        {
          dataType: "list",
          items: [
            { dataType: "list", items: { dataType: "bytes" } },
            { dataType: "integer" },
            {
              title: "AssetClass",
              description:
                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
              anyOf: [
                {
                  title: "AssetClass",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "policyId" },
                    { dataType: "bytes", title: "assetName" },
                  ],
                },
              ],
            },
            {
              title: "AssetClass",
              description:
                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
              anyOf: [
                {
                  title: "AssetClass",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "policyId" },
                    { dataType: "bytes", title: "assetName" },
                  ],
                },
              ],
            },
          ],
        } as any,
      ),
    };
  },
  { _datum: { title: "Data", description: "Any Plutus data." } },
  {
    _r: {
      title: "Wrapped Redeemer",
      description:
        "A redeemer wrapped in an extra constructor to make multi-validator detection possible on-chain.",
      anyOf: [
        {
          dataType: "constructor",
          index: 1,
          fields: [{ description: "Any Plutus data." }],
        },
      ],
    },
  },
) as unknown as OracleValidatorSpend;

export interface OracleValidatorWithdrawValidate {
  new (
    verificationKeys: Array<string>,
    threshold: bigint,
    _oracleAsset: { policyId: string; assetName: string },
    governanceToken: { policyId: string; assetName: string },
  ): Validator;
  redeemer: {
    data:
      | {
          Aggregated: [
            {
              token: { policyId: string; assetName: string };
              tokenPriceInLovelaces: bigint;
              denominator: bigint;
              validTo: bigint;
            },
          ];
        }
      | {
          Pooled: [
            {
              token: { policyId: string; assetName: string };
              tokenAAmount: bigint;
              tokenBAmount: bigint;
              validTo: bigint;
            },
          ];
        };
    signatures: Array<{ signature: string; keyPosition: bigint }>;
  };
}

export const OracleValidatorWithdrawValidate = Object.assign(
  function (
    verificationKeys: Array<string>,
    threshold: bigint,
    _oracleAsset: { policyId: string; assetName: string },
    governanceToken: { policyId: string; assetName: string },
  ) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "5904fe010000323232323232322322322222532323233300c3003300d3754008264a66601a646464a66602066e1d2004301137540022a666020600e60226ea8c054c048dd500089919b8900d32333001001332300100122533301700114bd700991980c800998018019919800800980e00191299980d0008a5eb804c8c94ccc064ccc064cdd7801002a504a226603a00466008008002266008008002603c004603800260320026eb0c008c050dd5005a4000444a66602e0042002266600600660340046464a66602c601a602e6ea800454ccc058c8ccdca9bae301c301937540046eccc004c064dd50081bae30013019375400646038002266e0000d200210031633323001001222533301b00214c103d87a800013232533301a30110031300f3301e375200497ae01333005005001337000069000980f8019bae301d002013375a600a602e6ea8004c0640088c058c05c0045858c050c054008c04c004c03cdd50028a4c26cac64a66601a6008601c6ea80184c8c8c8c94ccc050c05c0084c8c926323300100100322533301700114984c8cc00c00cc06c008c94ccc054c030c058dd5000899191919299980e180f8010a4c2c6eb4c074004c074008dd7180d800980b9baa0011630190013253330123009001132325333017301a0021324994ccc050c02cc054dd500089919191919191919299980f981100109924c602000e2c6eb4c080004c080008dd6980f000980f0011bad301c001301c002301a001301637540022c2c603000260286ea801054ccc048c0200044c8c94ccc05cc0680084c9265333014300b3015375400226464646464646464a66603e60440042649318080038b1bad30200013020002375a603c002603c0046eb4c070004c070008c068004c058dd50008b0b180c000980a1baa00416301237540062c6eb0c054004c054008c04c004c03cdd50030b12999806980218071baa00113232323253330143017002149858dd7180a800980a8011bae3013001300f37540022c2644a66601c646464646464a6660286014602a6ea8c064c0680184c8cc88c94ccc060c03cc064dd5000899299980c9808180d1baa001132323300100100822533301f00114a0264a66603a66e3cdd718110010020a511330030030013022001375c603c60366ea80044c8c8cc004004024894ccc07c004528099299980e99baf004301e302200214a22660060060026044002601c6603a00297ae0301d301a3754603a60346ea8c074c078c068dd5180e980d1baa00114a0646600200201044a6660380022980103d87a800013232533301b301132533301c3012301d37540022900009bad3021301e375400264a6660386024603a6ea80045300103d87a80001323300100137566044603e6ea8008894ccc084004530103d87a8000132323253330213371e0166eb8c08800c4c058cc094dd4000a5eb804cc014014008dd698110011812801181180099198008009bab3008301e37546010603c6ea800c894ccc080004530103d87a8000132323253330203371e0166eb8c08400c4c054cc090dd3000a5eb804cc014014008dd5981080118120011811000898081980f80125eb804cc010010004c080008c078004dd7180d180b9baa00f375c6002602e6ea803c8c068c06c00458dd6180c180c980c8011bab3017001301730173017301730170023758602a002602a60226ea8c050004c040dd50008a4c26cac6022601c6ea8010dd2a40006e1d2002370e90001bad0013758002ae6955ceaab9e5573eae815d0aba201",
        [verificationKeys, threshold, _oracleAsset, governanceToken],
        {
          dataType: "list",
          items: [
            { dataType: "list", items: { dataType: "bytes" } },
            { dataType: "integer" },
            {
              title: "AssetClass",
              description:
                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
              anyOf: [
                {
                  title: "AssetClass",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "policyId" },
                    { dataType: "bytes", title: "assetName" },
                  ],
                },
              ],
            },
            {
              title: "AssetClass",
              description:
                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
              anyOf: [
                {
                  title: "AssetClass",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "policyId" },
                    { dataType: "bytes", title: "assetName" },
                  ],
                },
              ],
            },
          ],
        } as any,
      ),
    };
  },

  {
    redeemer: {
      title: "OracleRedeemer",
      anyOf: [
        {
          title: "OracleRedeemer",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              title: "data",
              anyOf: [
                {
                  title: "Aggregated",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      anyOf: [
                        {
                          title: "AggregatedFeed",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              title: "token",
                              description:
                                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                              anyOf: [
                                {
                                  title: "AssetClass",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    { dataType: "bytes", title: "policyId" },
                                    { dataType: "bytes", title: "assetName" },
                                  ],
                                },
                              ],
                            },
                            {
                              dataType: "integer",
                              title: "tokenPriceInLovelaces",
                            },
                            { dataType: "integer", title: "denominator" },
                            { dataType: "integer", title: "validTo" },
                          ],
                        },
                      ],
                    },
                  ],
                },
                {
                  title: "Pooled",
                  dataType: "constructor",
                  index: 1,
                  fields: [
                    {
                      anyOf: [
                        {
                          title: "PooledFeed",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              title: "token",
                              description:
                                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                              anyOf: [
                                {
                                  title: "AssetClass",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    { dataType: "bytes", title: "policyId" },
                                    { dataType: "bytes", title: "assetName" },
                                  ],
                                },
                              ],
                            },
                            { dataType: "integer", title: "tokenAAmount" },
                            { dataType: "integer", title: "tokenBAmount" },
                            { dataType: "integer", title: "validTo" },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            {
              dataType: "list",
              items: {
                title: "Signature",
                anyOf: [
                  {
                    title: "Signature",
                    dataType: "constructor",
                    index: 0,
                    fields: [
                      { dataType: "bytes", title: "signature" },
                      { dataType: "integer", title: "keyPosition" },
                    ],
                  },
                ],
              },
              title: "signatures",
            },
          ],
        },
      ],
    },
  },
) as unknown as OracleValidatorWithdrawValidate;

export interface OrderContractDepositOrderContract {
  new (): Validator;
  _n: Data;
}

export const OrderContractDepositOrderContract = Object.assign(
  function () {
    return { type: "PlutusV2", script: "51010000322253330034a029309b2b2b9a01" };
  },

  { _n: { title: "Data", description: "Any Plutus data." } },
) as unknown as OrderContractDepositOrderContract;

export interface PlaceholderNftPlaceholderNft {
  new (_nonce: bigint): Validator;
  r: {
    action:
      | {
          MintNFT: [
            { transactionId: { hash: string }; outputIndex: bigint },
            bigint,
          ];
        }
      | { BurnNFT: [string] };
    inner: undefined;
  };
}

export const PlaceholderNftPlaceholderNft = Object.assign(
  function (_nonce: bigint) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "59027f010000323232323232322322323225333007323232323232533300d3009300e375400a26644a66601e601660206ea800c4c94ccc040cccc00c014008dca1bb3001480084c8cc00400401c894ccc054004528099299980999baf301830153754603000400829444cc00c00c004c060004528180a18089baa00313333002004001375c602860226ea800d200122223375e6e98c94ccc048cdc3a400460266ea800452f5bded8c026eacc05cc050dd50009919800800991980080080311299980b8008a5eb7bdb1804c8c8c8c94ccc060cdc7a44100002100313301c337606ea4008dd3000998030030019bab3019003375c602e0046036004603200244a66602c002298103d87a8000132323253330163371e0106eb8c05c00c4cdd2a4000660346e980052f5c026600a00a0046eacc05c008c068008c060004dd31980a99bb037520046ea00052f5bded8c06eb8c048c03cdd50028b180898071baa0093756602060226022602260220046eb0c03c004c02cdd518070011806980700098049baa00114984d9594ccc014c004c018dd50010991919192999806180780109924c64a666014600c002264646464a6660226028004264932999807180518079baa003132323232533301530180021324994ccc048c038c04cdd500189919299980b980d0010a4c2c6eb8c060004c050dd50018b0b1bad301600130160023014001301037540062c2c6eb4c048004c048008c040004c030dd50020a99980519b87480080044c8c94ccc03cc04800852616375c602000260186ea801058c028dd50018b192999804980298050008a99980618058008a4c2c2c6ea8c034004c034008c02c004c01cdd50010b1b8748000dd6800ab9a5573aaae7955cfaba05742ae881",
        [_nonce],
        { dataType: "list", items: [{ dataType: "integer" }] } as any,
      ),
    };
  },

  {
    r: {
      title: "NFTRedeemerElement",
      anyOf: [
        {
          title: "NFTRedeemerElement",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              title: "action",
              anyOf: [
                {
                  title: "MintNFT",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      description:
                        "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
                      anyOf: [
                        {
                          title: "OutputReference",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              title: "transactionId",
                              description:
                                "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                              anyOf: [
                                {
                                  title: "TransactionId",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    { dataType: "bytes", title: "hash" },
                                  ],
                                },
                              ],
                            },
                            { dataType: "integer", title: "outputIndex" },
                          ],
                        },
                      ],
                    },
                    { dataType: "integer" },
                  ],
                },
                {
                  title: "BurnNFT",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
            {
              title: "inner",
              description: "The nullary constructor.",
              anyOf: [{ dataType: "constructor", index: 0, fields: [] }],
            },
          ],
        },
      ],
    },
  },
) as unknown as PlaceholderNftPlaceholderNft;

export interface PoolSpend {
  new (delegatorNftPolicy: string, poolConfigScriptHash: string): Validator;
  datum: {
    params: {
      collateralAddress: {
        paymentCredential:
          | { VerificationKeyCredential: [string] }
          | { ScriptCredential: [string] };
        stakeCredential:
          | {
              Inline: [
                | { VerificationKeyCredential: [string] }
                | { ScriptCredential: [string] },
              ];
            }
          | {
              Pointer: {
                slotNumber: bigint;
                transactionIndex: bigint;
                certificateIndex: bigint;
              };
            }
          | null;
      };
      loanCs: { policyId: string; assetName: string };
      collateralCs: { policyId: string; assetName: string };
      oracleCollateralAsset: { policyId: string; assetName: string };
      oracleLoanAsset: { policyId: string; assetName: string };
      lpToken: { policyId: string; assetName: string };
      poolNftName: string;
      poolConfigAssetname: string;
    };
    balance: bigint;
    lentOut: bigint;
    totalLpTokens: bigint;
  };
  redeemer: {
    wrapper: {
      action:
        | {
            Continuing: [
              | { LpAdjust: { valueDelta: bigint; continuingOutput: bigint } }
              | {
                  Borrow: {
                    loanAmount: bigint;
                    collateralAmount: bigint;
                    borrowerTn: string;
                    interestRate: bigint;
                    continuingOutput: bigint;
                  };
                }
              | {
                  CloseLoan: {
                    loanAmount: bigint;
                    repayAmount: bigint;
                    continuingOutput: bigint;
                  };
                }
              | { PayFee: { fee: bigint; continuingOutput: bigint } },
            ];
          }
        | "Destroy";
      configRef: { transactionId: { hash: string }; outputIndex: bigint };
      order: { transactionId: { hash: string }; outputIndex: bigint } | null;
    };
  };
}

export const PoolSpend = Object.assign(
  function (delegatorNftPolicy: string, poolConfigScriptHash: string) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "591d8f01000032323232323232322322322253232323233300b3002300d375400a264a66601864646464646464a6660266014602a6ea80184c8c8c8c8c94ccc060c03cc068dd500989919299980d1808980e1baa00113232323232533301f301630213754002264a666040602e60446ea80044c94ccc084c05cc08cdd5000899192999811980d18129baa001132325333025301d30273754004264646464a66605a60600042a666052603e6eb4c0b00044c94ccc0a801454ccc0a801040045280a5032533302e00114a0264a66605e002264944dd61818801099299981800089919251375860660066eb0c0c800c54ccc0c0c0cc0044c8c8c9289bac3034003375860660066eb0c0c800c5281819000981880099198008008079129998178008a5eb804c8ccc888c8cc00400400c894ccc0d4004400c4c8cc0dcdd39981b9ba90063303737526eb8c0d0004cc0dcdd41bad30350014bd7019801801981c801181b8009bae302e0013756605e00266006006606600460620022c2c605c00266020024028603864a66604e603a60526ea8004520001375a605a60546ea8004c94ccc09cc074c0a4dd50008a60103d87a8000132330010013756605c60566ea8008894ccc0b4004530103d87a80001323232533302c3371e0166eb8c0b800c4c094cc0c4dd4000a5eb804cc014014008dd69817001181880118178009980800580999baf0080111632325333026301d00113232533302c302f0021324994ccc0a0c07cc0a8dd5000899192999817181880109924c600c0022c605e00260566ea80045858c0b4004c0a4dd50018a999813180e000899192999816181780109924ca666050603e60546ea80044c8c8c8c94ccc0c0c0cc0084c8c926300900232533302d302400115333031303037540082930b0a99981698118008a99981898181baa00414985858c0b8dd50018b18188009818801181780098159baa0011616302d001302937540062a66604c603c00226464a666058605e0042649318020008b181680098149baa00316302737540044a66604a6038604e6ea80044c8c8c8c94ccc0b4c0c00084c92653330293020302b375400626464a66605e60640042930b1bae3030001302c37540062c2c6eb4c0b8004c0b8008c0b0004c0a0dd50008b181498131baa0011632323300100101222533302900114c103d87a8000132323253330283375e00c6054006260426605a00297ae0133005005002302a002302d002302b0013374a90031981399ba548010cc09c00ccc09cc0a0c0a4c094dd500525eb812f5c06eb8c09cc090dd50008b181318119baa001163025302237540022c6048604a0046046002603e6ea8c088008dd598109811000980e9baa3020301d37540022c66646002002444a666040004298103d87a800013232533301e301500313017330230024bd70099980280280099b8000348004c09000cc088008028dd6980f980e1baa001301e301b37540262646464a66603e6044004264a66603866e1d2001375a603e004266e3c01000458dd7180e8008b1810000998010020031bae301e301b37540264464a666034602060386ea800452f5bded8c026eacc080c074dd50009980180100091191980080080191299980f0008a60103d87a80001323232533301d3371e00c6eb8c07c00c4c058cc088dd3000a5eb804cc014014008dd5980f80118110011810000991980080080291299980d8008a5eb7bdb1804c8c8c8c94ccc06ccdc7a441000021003133020337606ea4008dd3000998030030019bab301d003375c6036004603e004603a00266e95200233019375200297ae0375c6032602c6ea801858dd5980c180c980c980c980c980c8011bab3017001301730170023758602a002602a602a60226ea8c050008c04cc050004c03cdd50030a4c26cac64a666018600600226464a666024602a004264932999807180298081baa00113232323253330163019002149858dd7180b800980b8011bad3015001301137540022c2c6026002601e6ea801c54ccc030c0080044c8c94ccc048c05400852616375c6026002601e6ea801c58c034dd5003099919191919119191299980a191919191919191919191919191919191919192999813980e98149baa00b132323232533302b3022302d3754002264646464a66605e604a60626ea80044c8c8c8c8c94ccc0d0c0acc0d8dd5000899191919191919299981d9819981e9baa001132533303c3033303e375400226464646464646464646464646464646464646464a6660a860ae0042646464646464a6660ac609860b06ea80944c8c94ccc160c13cc168dd500089919299982d1828182e1baa00213232533305c533305c00614a22a660ba921256e6f5f72656d61696e696e675f6c69717569646974795f746f6b656e73203f2046616c73650014a02a6660b8a6660b8002294454cc1752411b6275726e745f64656c656761746f725f6e6674203f2046616c73650014a02a6660b8a6660b8048294454cc17524116636f6e6669675f6861735f6e6674203f2046616c73650014a02a6660b8004294454cc17524011f6275726e65645f746f6b656e5f6e616d655f6d61746368203f2046616c73650014a029405280a503370e66604806a0b26eb8c098c178dd50232400266e3cdd71830182e9baa002375c601060ba6ea811458c94ccc168c1440044c8c94ccc180c18c0084c926533305c3053305e3754002264646464a6660c860ce0042930b1bae30650013065002375a60c600260be6ea80045858c184004c174dd50010a99982d182800089919299983018318010a4c2c6eb8c184004c174dd50010b182d9baa001305e305b37540022c6600606660a0660b86ea40a12f5c0609a66e00ccc07c0c0dd71817182c9baa3001305937540826eb8c080c164dd51800982c9baa04103c132325323233305a305100313232323232533305f305630613754002264646464a6660c6a6660c664a6660c866e200252000133712012600200a266e24c0040140248c8cdc21bad306b001375a60d660d800260ce6ea80045288a998322491a636865636b5f64656c74615f616d6f756e74203f2046616c73650014a02a6660c6a6660c6002294454cc1912411876616c69645f7472616e736974696f6e203f2046616c73650014a02a6660c6a6660c6004294454cc1912411976616c75655f64656c74615f636865636b203f2046616c73650014a02a6660c6056294454cc191240116636f6e6669675f6861735f6e6674203f2046616c73650014a029405280a503300f00622253330653370e00666e0009002854ccc194c1700084cdc38008040a5014a0a6660c2a6660c2a6660c266e200192000153330613371000890000a99983099b8901a3370400c9000899b8800404714a029405280a5115333061300900615333061300900413371203400c294052808008a503330603375e64646464a6660c866e20008004530103d879800015333064337100020042980103d87b800014c103d87a8000337046eb4c1a4008dd69834983500199b82375a60d00046eb4c1a0c1a4004c190dd5182d19833261010000330664c10101004bd7018319baa0014c0103d87a80004a0944c194c188dd50008b19299982f982b0228a6103d87a80001533305f3371008a90000982c19832182c198321ba83006001330643750600c08a97ae04bd700982c19832182c198321ba800133064375008a97ae04bd7019b820013370008e08a66604c06e6eb8c0d4c180dd5180418301baa048375c604e60c06ea8c020c180dd50241bad30623063002375a60c200260ba6ea801054ccc168c14000c4c8c8c8c8c8c8c8c8c8c94ccc190c168c198dd50008992999832982e18339baa00113232325333068533306800a14a22a660d29201186c6f616e5f69735f706f736974697665203f2046616c73650014a02a6660d0a6660d0010294454cc1a524121696e7465726573745f726174655f69735f706f736974697665203f2046616c73650014a02a6660d0a6660d0012294454cc1a52411c7061737365735f6d696e5f7468726573686f6c64203f2046616c73650014a02a6660d0a6660d0002294454cc1a52411f76616c69645f636f6c6c61746572616c5f657869737473203f2046616c73650014a02a6660d0a6660d000e294454cc1a52411876616c69645f7472616e736974696f6e203f2046616c73650014a02a6660d0a6660d000c294454cc1a52411c76616c69645f696e7465726573745f7261746573203f2046616c73650014a02a6660d0060294454cc1a5240116636f6e6669675f6861735f6e6674203f2046616c73650014a029405280a5014a0294052819198008009bac3040306b375400644a6660da00229404c94ccc1a8cdd7983818369baa307000204314a226600600600260e000264a6660ce60bc60d26ea80084c8c8c8c94ccc1bcc1c80084c8c926330060022533306d3064306f375400226464a6660e660ec0042930b1bae3074001307037540022c6600a0064a6660d860c660dc6ea80044c8c8c8c94ccc1d0c1dc0084c926305f00316375a60ea00260ea00460e600260de6ea80045858dd6183800098380011bac306e001306a37540042c44646600200200644a6660dc00229309919801801983900118019838000983598341baa0011633010040305d33069306a3067375400297ae016303b30663754607660cc6ea8138cdc49919191919299983399b8800100513370666e00cdc10008018022410112f4266e0ccdc019b800043370400600a66e08cdc08008028012410112f466e0ccdc119b8004d00b4820225e8cdc00278269bad306b306c306c306c3068375402c6eb4c0acc19cdd500a99b82375a605a60cc6ea80512080897a375a607460ca6ea804c014cc038dd698339834002911299983219b87337020460120062a6660c866e1c0240084c16c0045280a5030080033371202c008600c0066eb4c18c004c18cc18cc18c008dd69830800982e9baa0041533305a3052003132323232323253330605333060300800514a22a660c2921166c6f616e5f616d745f636865636b203f2046616c73650014a02a6660c0a6660c0004294454cc1852411772657061795f616d745f636865636b203f2046616c73650014a02a6660c0a6660c0002294454cc1852411876616c69645f7472616e736974696f6e203f2046616c73650014a02a6660c0050294454cc185240116636f6e6669675f6861735f6e6674203f2046616c73650014a029405280a503300c375a60ca60cc006444a6660c466e1c00ccdc00108028a99983119b8700230090071305900114a02940cdc40018009bad30630013063002375a60c200260ba6ea80104c8c8c94ccc1754ccc174cdc40090010a51153305e49011c76616c69645f6d696e696d756d5f616d6f756e74203f2046616c73650014a02a6660baa6660ba002294454cc1792411876616c69645f7472616e736974696f6e203f2046616c73650014a02a6660ba04a294454cc179240116636f6e6669675f6861735f6e6674203f2046616c73650014a02940528198049bad30623063002222533305f3370e0060082a6660be60ac004260ac00229405281bad3061001305d37540086e05200037109000182c9baa001305c3059375404a460b860ba60ba60ba60ba60ba00244646600200200644a6660b80022980103d87a80001323232533305b3375e00c60ba006260a8660c000297ae0133005005002305d0023060002305e00122325333056304d3058375400226464a6660b060a060b46ea80044c94ccc164c140c16cdd500089919191919191919299983298340010991919191919191919192999835a999835a999835983099981a1bab3035306e375402a0786eb8c064c1b8dd502b08018a5014a22a660d89211b76616c69645f706f6f6c5f746f6b656e5f7478203f2046616c73650014a02a6660d6a6660d6008294454cc1b12411a76616c75655f6368616e67655f636865636b203f2046616c73650014a02a6660d6a6660d6002294454cc1b124115665f64656c74615f636865636b203f2046616c73650014a02a6660d6a6660d6004294454cc1b124114706172616d735f636865636b203f2046616c73650014a02a6660d6a6660d6012294454cc1b12411a6f75747075745f69735f706f736974697665203f2046616c73650014a02a6660d6a6660d600c294454cc1b124119647573745f61747461636b5f636865636b203f2046616c73650014a02a6660d600a294454cc1b124012176616c69645f706f6f6c5f6f75747075745f61646472657373203f2046616c73650014a029405280a5014a0294052819980b19b8100e053337020180a266e04028140cdd780782a182f19981881d81c9bae3016306b37540a666e1cccc0c000cdd7181f98351baa3031306a37540a46eb8c0c4c1a8dd5181898351baa0523330303756606260d46ea8044dd7181f98351baa3031306a37540a46eb8c0c4c1a8dd5181898351baa0523375e607c60d26ea80400e8c8cdd79ba63001002374c60026eacc0c0c1a4dd5008119820800a4410032323330010010393332225333069306000114bd6f7b6300991919800800a5eb7bdb180894ccc1c00044cc1c4cdd81ba9006374c00697adef6c601323232325333070300c3300d00a002133075337606ea4028dd30038028a99983819b8f00a002133075337606ea4028dd300380189983a99bb037520046e98004cc01801800cdd598390019bae30700023074002307200132330010014bd6f7b63011299983780089983819bb037520086ea000d2f5bded8c0264646464a6660de6016660180100042660e866ec0dd48041ba80070051533306f3371e0100042660e866ec0dd48041ba8007003133074337606ea4008dd4000998030030019bad3071003375c60de00460e600460e20026eb8c0f8c1a4dd5181818349baa051375c606060d26ea8c0c0c1a4dd502899b8100a04f222533306c0021001132333004004307000333223233001001005225333071001133072337606ea4010dd3001a5eb7bdb1804c8c8c8c94ccc1c4c034cc0380200084cc1d8cdd81ba9008374c00e00a2a6660e266e3c0200084c94ccc1c8c1a4c1d0dd500089983b99bb0375201260f060ea6ea80040104010c94ccc1c94ccc1d80045288a5014c103d87a80001306b33077374c00297ae03233300100100800222253330780021001132333004004307c0033322323300100100522533307d00113307e337606ea4010dd4001a5eb7bdb1804c8c8c8c94ccc1f4c064cc0680200084cc20804cdd81ba9008375000e00a2a6660fa66e3c0200084c94ccc1f8c1d4c20004dd50008998418099bb037520126108026102026ea80040104010c94ccc1f8c1d4004530103d87a8000130773308301375000297ae03370000e0022661040266ec0dd48011ba800133006006003375a60fe0066eb8c1f4008c20404008c1fc004dd7183b8009bad3078001307a002133076337606ea4008dd3000998030030019bab3073003375c60e200460ea00460e60026eb8c1ac004dd5983600098370011baf4c103d879800022533306533720004002298103d8798000153330653371e0040022980103d87a800014c103d87b80005333062337129000002099b894800001852818298038b1bad30660013066002375a60c800260c80046eb4c188004c188008c180004c170dd50008b182f182d9baa00116301e305a375400260b860b26ea800458ccc8c0040048894ccc1700085300103d87a800013232533305a3051003130533305f0024bd70099980280280099b8000348004c18000cc1780080cc0088c164c168c168c168c168c168c1680054ccc144c120c14cdd500109919191919191919299982e98300010a4c2c6eb4c178004c178008dd6982e000982e0011bad305a001305a002375a60b000260a86ea8008594ccc140c11cc148dd50068991919191919191919191919191919192999832183380109924c60a80022c60ca00260ca0046eb4c18c004c18c008dd6983080098308011bad305f001305f002375a60ba00260ba0046eb4c16c004c16c008dd6982c800982c8011bad30570013053375401a2c2c60aa00260aa0046eb4c14c004c14c008dd6982880098288011bad304f001304f002375a609a002609a0046eb4c12c004c12c008c124004c124008dd6982380098238011bad30450013045002375a6086002607e6ea800458c104c0f8dd50008b1800981e9baa3004303d375400c4608060826082002605c6660026eacc008c0ecdd51801181d9baa004034375c600660766ea808c888c94ccc0ecc0c4c0f4dd50008a400026eb4c104c0f8dd500099299981d9818981e9baa00114c0103d87a80001323300100137566084607e6ea8008894ccc104004530103d87a8000132323253330403371e00e6eb8c10800c4c0e4cc114dd4000a5eb804cc014014008dd698210011822801182180099198008008021129998200008a6103d87a80001323232533303f3371e00e6eb8c10400c4c0e0cc110dd3000a5eb804cc014014008dd59820801182200118210009181e981f0009181e181e981e981e981e981e981e981e800981d181b9baa001163300a01323375e6018606e6ea8004008c0e0c0e4008c0dc004c0ccdd50101bae3035303237540022c600c60626ea8008dd59819981a001181900098171baa30313032302e37546062605c6ea800458cc0040308cdd7980198171baa00100422323300100100322533303100114c103d87a800013232533302f300500213028330340024bd70099802002000981a801181980091817800981698151baa00b16330013756605800691010022323300100100322533302d00114bd6f7b630099191919299981699b8f0070021003133032337606ea4008dd3000998030030019bab302f003375c605a0046062004605e0026eacc0a8c0acc0acc0acc0acc0ac004c0a8c0a8008dd6181400098140011bac302600130260023758604800260406ea8c08c008c088c08c004c078dd50041bad30203021002375a603e002603e0046eb4c074004c074008c06c004c05cdd50078a4c26caca666024601260286ea80084c8c8c8c8c8c94ccc070c07c0084c8c8c92632533301b30120011323253330213024002132498c03000458c088004c078dd50020a99980d98088008a99980f980f1baa00414985858c070dd5001980400219299980c980800089919299980f981100109924c64a6660386026002264646464a666048604e0042930b1bad30250013025002375a6046002603e6ea800854ccc070c0480044c8c8c8c8c8c8c8c8c8c94ccc0a8c0b400852616375a605600260560046eb4c0a4004c0a4008dd7181380098138011bad30250013025002375a6046002603e6ea800854ccc070c0500044c8c8c8c8c8c94ccc098c0a400852616375a604e002604e0046eb4c094004c094008dd69811800980f9baa0021533301c3370e9003000899191919299981218138010a4c2c6eb4c094004c094008dd69811800980f9baa00216301d37540022c604000260386ea801854ccc064c03c00454ccc074c070dd50030a4c2c2c60346ea801458c074004c074008c06c004c06c008c064004c054dd50010b129998091804980a1baa001132323232533301a301d0021324994ccc058c034c060dd500189919299980e180f8010a4c2c6eb8c074004c064dd50018b0b1bad301b001301b0023019001301537540022ca66601e600c60226ea80284c8c8c8c8c8c8c8c94ccc06cc0780084c926300900716375a603800260380046eb4c068004c068008dd6980c000980c001180b00098091baa00a162533300f300630113754002264646464646464646464646464646464a666046604c004264646464646493180b805180b005980a806180a006980980718098078b1bae30240013024002375c6044002604400460400026040004603c002603c004603800260380046034002603400460300026030004602c00260246ea80045894ccc038c014c040dd5000899191919299980b180c8010a4c2c6eb8c05c004c05c008dd7180a80098089baa001162533300d3004300f3754002264646464a66602a60300042646493192999809980500089919299980c980e00109924c64a66602c601a00226464a666038603e0042649318068008b180e800980c9baa00215333016300c001132323232323253330203023002149858dd6981080098108011bad301f001301f002375a603a00260326ea800858c05cdd50008b180d000980b1baa00315333013300900115333017301637540062930b0b180a1baa002300600316301600130160023014001301037540022c464a66601a600800226464a666026602c0042930b1bae3014001301037540042a66601a600600226464a666026602c0042930b1bae3014001301037540042c601c6ea8004c044c038dd50029b8748008dc3a40006e1d2004374a90001bae001375c002ae695ce2ab9d5573caae7d5d02ba15745",
        [delegatorNftPolicy, poolConfigScriptHash],
        {
          dataType: "list",
          items: [{ dataType: "bytes" }, { dataType: "bytes" }],
        } as any,
      ),
    };
  },
  {
    datum: {
      title: "Datum",
      anyOf: [
        {
          title: "Datum",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              title: "params",
              anyOf: [
                {
                  title: "Constants",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "collateralAddress",
                      description:
                        "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
                      anyOf: [
                        {
                          title: "Address",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              title: "paymentCredential",
                              description:
                                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                              anyOf: [
                                {
                                  title: "VerificationKeyCredential",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [{ dataType: "bytes" }],
                                },
                                {
                                  title: "ScriptCredential",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [{ dataType: "bytes" }],
                                },
                              ],
                            },
                            {
                              title: "stakeCredential",
                              anyOf: [
                                {
                                  title: "Some",
                                  description: "An optional value.",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    {
                                      description:
                                        "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
                                      anyOf: [
                                        {
                                          title: "Inline",
                                          dataType: "constructor",
                                          index: 0,
                                          fields: [
                                            {
                                              description:
                                                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                                              anyOf: [
                                                {
                                                  title:
                                                    "VerificationKeyCredential",
                                                  dataType: "constructor",
                                                  index: 0,
                                                  fields: [
                                                    { dataType: "bytes" },
                                                  ],
                                                },
                                                {
                                                  title: "ScriptCredential",
                                                  dataType: "constructor",
                                                  index: 1,
                                                  fields: [
                                                    { dataType: "bytes" },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                        {
                                          title: "Pointer",
                                          dataType: "constructor",
                                          index: 1,
                                          fields: [
                                            {
                                              dataType: "integer",
                                              title: "slotNumber",
                                            },
                                            {
                                              dataType: "integer",
                                              title: "transactionIndex",
                                            },
                                            {
                                              dataType: "integer",
                                              title: "certificateIndex",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                                {
                                  title: "None",
                                  description: "Nothing.",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    {
                      title: "loanCs",
                      description:
                        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                      anyOf: [
                        {
                          title: "AssetClass",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "bytes", title: "policyId" },
                            { dataType: "bytes", title: "assetName" },
                          ],
                        },
                      ],
                    },
                    {
                      title: "collateralCs",
                      description:
                        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                      anyOf: [
                        {
                          title: "AssetClass",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "bytes", title: "policyId" },
                            { dataType: "bytes", title: "assetName" },
                          ],
                        },
                      ],
                    },
                    {
                      title: "oracleCollateralAsset",
                      description:
                        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                      anyOf: [
                        {
                          title: "AssetClass",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "bytes", title: "policyId" },
                            { dataType: "bytes", title: "assetName" },
                          ],
                        },
                      ],
                    },
                    {
                      title: "oracleLoanAsset",
                      description:
                        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                      anyOf: [
                        {
                          title: "AssetClass",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "bytes", title: "policyId" },
                            { dataType: "bytes", title: "assetName" },
                          ],
                        },
                      ],
                    },
                    {
                      title: "lpToken",
                      description:
                        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                      anyOf: [
                        {
                          title: "AssetClass",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "bytes", title: "policyId" },
                            { dataType: "bytes", title: "assetName" },
                          ],
                        },
                      ],
                    },
                    { dataType: "bytes", title: "poolNftName" },
                    { dataType: "bytes", title: "poolConfigAssetname" },
                  ],
                },
              ],
            },
            { dataType: "integer", title: "balance" },
            { dataType: "integer", title: "lentOut" },
            { dataType: "integer", title: "totalLpTokens" },
          ],
        },
      ],
    },
  },
  {
    redeemer: {
      title: "Wrapped Redeemer",
      description:
        "A redeemer wrapped in an extra constructor to make multi-validator detection possible on-chain.",
      anyOf: [
        {
          dataType: "constructor",
          index: 1,
          fields: [
            {
              anyOf: [
                {
                  title: "Redeemer",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "action",
                      anyOf: [
                        {
                          title: "Continuing",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              anyOf: [
                                {
                                  title: "LpAdjust",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    {
                                      dataType: "integer",
                                      title: "valueDelta",
                                    },
                                    {
                                      dataType: "integer",
                                      title: "continuingOutput",
                                    },
                                  ],
                                },
                                {
                                  title: "Borrow",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [
                                    {
                                      dataType: "integer",
                                      title: "loanAmount",
                                    },
                                    {
                                      dataType: "integer",
                                      title: "collateralAmount",
                                    },
                                    { dataType: "bytes", title: "borrowerTn" },
                                    {
                                      dataType: "integer",
                                      title: "interestRate",
                                    },
                                    {
                                      dataType: "integer",
                                      title: "continuingOutput",
                                    },
                                  ],
                                },
                                {
                                  title: "CloseLoan",
                                  dataType: "constructor",
                                  index: 2,
                                  fields: [
                                    {
                                      dataType: "integer",
                                      title: "loanAmount",
                                    },
                                    {
                                      dataType: "integer",
                                      title: "repayAmount",
                                    },
                                    {
                                      dataType: "integer",
                                      title: "continuingOutput",
                                    },
                                  ],
                                },
                                {
                                  title: "PayFee",
                                  dataType: "constructor",
                                  index: 3,
                                  fields: [
                                    { dataType: "integer", title: "fee" },
                                    {
                                      dataType: "integer",
                                      title: "continuingOutput",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                        {
                          title: "Destroy",
                          dataType: "constructor",
                          index: 1,
                          fields: [],
                        },
                      ],
                    },
                    {
                      title: "configRef",
                      description:
                        "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
                      anyOf: [
                        {
                          title: "OutputReference",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              title: "transactionId",
                              description:
                                "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                              anyOf: [
                                {
                                  title: "TransactionId",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    { dataType: "bytes", title: "hash" },
                                  ],
                                },
                              ],
                            },
                            { dataType: "integer", title: "outputIndex" },
                          ],
                        },
                      ],
                    },
                    {
                      title: "order",
                      anyOf: [
                        {
                          title: "Some",
                          description: "An optional value.",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              description:
                                "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
                              anyOf: [
                                {
                                  title: "OutputReference",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    {
                                      title: "transactionId",
                                      description:
                                        "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                                      anyOf: [
                                        {
                                          title: "TransactionId",
                                          dataType: "constructor",
                                          index: 0,
                                          fields: [
                                            {
                                              dataType: "bytes",
                                              title: "hash",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                    {
                                      dataType: "integer",
                                      title: "outputIndex",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                        {
                          title: "None",
                          description: "Nothing.",
                          dataType: "constructor",
                          index: 1,
                          fields: [],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
    },
  },
) as unknown as PoolSpend;

export interface PoolMint {
  new (delegatorNftPolicy: string, poolConfigScriptHash: string): Validator;
  redeemer:
    | { MintPoolNFT: [{ outputIndex: bigint; initialPoolDelegation: string }] }
    | { BurnPoolNFT: [string] };
}

export const PoolMint = Object.assign(
  function (delegatorNftPolicy: string, poolConfigScriptHash: string) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "591d8f01000032323232323232322322322253232323233300b3002300d375400a264a66601864646464646464a6660266014602a6ea80184c8c8c8c8c94ccc060c03cc068dd500989919299980d1808980e1baa00113232323232533301f301630213754002264a666040602e60446ea80044c94ccc084c05cc08cdd5000899192999811980d18129baa001132325333025301d30273754004264646464a66605a60600042a666052603e6eb4c0b00044c94ccc0a801454ccc0a801040045280a5032533302e00114a0264a66605e002264944dd61818801099299981800089919251375860660066eb0c0c800c54ccc0c0c0cc0044c8c8c9289bac3034003375860660066eb0c0c800c5281819000981880099198008008079129998178008a5eb804c8ccc888c8cc00400400c894ccc0d4004400c4c8cc0dcdd39981b9ba90063303737526eb8c0d0004cc0dcdd41bad30350014bd7019801801981c801181b8009bae302e0013756605e00266006006606600460620022c2c605c00266020024028603864a66604e603a60526ea8004520001375a605a60546ea8004c94ccc09cc074c0a4dd50008a60103d87a8000132330010013756605c60566ea8008894ccc0b4004530103d87a80001323232533302c3371e0166eb8c0b800c4c094cc0c4dd4000a5eb804cc014014008dd69817001181880118178009980800580999baf0080111632325333026301d00113232533302c302f0021324994ccc0a0c07cc0a8dd5000899192999817181880109924c600c0022c605e00260566ea80045858c0b4004c0a4dd50018a999813180e000899192999816181780109924ca666050603e60546ea80044c8c8c8c94ccc0c0c0cc0084c8c926300900232533302d302400115333031303037540082930b0a99981698118008a99981898181baa00414985858c0b8dd50018b18188009818801181780098159baa0011616302d001302937540062a66604c603c00226464a666058605e0042649318020008b181680098149baa00316302737540044a66604a6038604e6ea80044c8c8c8c94ccc0b4c0c00084c92653330293020302b375400626464a66605e60640042930b1bae3030001302c37540062c2c6eb4c0b8004c0b8008c0b0004c0a0dd50008b181498131baa0011632323300100101222533302900114c103d87a8000132323253330283375e00c6054006260426605a00297ae0133005005002302a002302d002302b0013374a90031981399ba548010cc09c00ccc09cc0a0c0a4c094dd500525eb812f5c06eb8c09cc090dd50008b181318119baa001163025302237540022c6048604a0046046002603e6ea8c088008dd598109811000980e9baa3020301d37540022c66646002002444a666040004298103d87a800013232533301e301500313017330230024bd70099980280280099b8000348004c09000cc088008028dd6980f980e1baa001301e301b37540262646464a66603e6044004264a66603866e1d2001375a603e004266e3c01000458dd7180e8008b1810000998010020031bae301e301b37540264464a666034602060386ea800452f5bded8c026eacc080c074dd50009980180100091191980080080191299980f0008a60103d87a80001323232533301d3371e00c6eb8c07c00c4c058cc088dd3000a5eb804cc014014008dd5980f80118110011810000991980080080291299980d8008a5eb7bdb1804c8c8c8c94ccc06ccdc7a441000021003133020337606ea4008dd3000998030030019bab301d003375c6036004603e004603a00266e95200233019375200297ae0375c6032602c6ea801858dd5980c180c980c980c980c980c8011bab3017001301730170023758602a002602a602a60226ea8c050008c04cc050004c03cdd50030a4c26cac64a666018600600226464a666024602a004264932999807180298081baa00113232323253330163019002149858dd7180b800980b8011bad3015001301137540022c2c6026002601e6ea801c54ccc030c0080044c8c94ccc048c05400852616375c6026002601e6ea801c58c034dd5003099919191919119191299980a191919191919191919191919191919191919192999813980e98149baa00b132323232533302b3022302d3754002264646464a66605e604a60626ea80044c8c8c8c8c94ccc0d0c0acc0d8dd5000899191919191919299981d9819981e9baa001132533303c3033303e375400226464646464646464646464646464646464646464a6660a860ae0042646464646464a6660ac609860b06ea80944c8c94ccc160c13cc168dd500089919299982d1828182e1baa00213232533305c533305c00614a22a660ba921256e6f5f72656d61696e696e675f6c69717569646974795f746f6b656e73203f2046616c73650014a02a6660b8a6660b8002294454cc1752411b6275726e745f64656c656761746f725f6e6674203f2046616c73650014a02a6660b8a6660b8048294454cc17524116636f6e6669675f6861735f6e6674203f2046616c73650014a02a6660b8004294454cc17524011f6275726e65645f746f6b656e5f6e616d655f6d61746368203f2046616c73650014a029405280a503370e66604806a0b26eb8c098c178dd50232400266e3cdd71830182e9baa002375c601060ba6ea811458c94ccc168c1440044c8c94ccc180c18c0084c926533305c3053305e3754002264646464a6660c860ce0042930b1bae30650013065002375a60c600260be6ea80045858c184004c174dd50010a99982d182800089919299983018318010a4c2c6eb8c184004c174dd50010b182d9baa001305e305b37540022c6600606660a0660b86ea40a12f5c0609a66e00ccc07c0c0dd71817182c9baa3001305937540826eb8c080c164dd51800982c9baa04103c132325323233305a305100313232323232533305f305630613754002264646464a6660c6a6660c664a6660c866e200252000133712012600200a266e24c0040140248c8cdc21bad306b001375a60d660d800260ce6ea80045288a998322491a636865636b5f64656c74615f616d6f756e74203f2046616c73650014a02a6660c6a6660c6002294454cc1912411876616c69645f7472616e736974696f6e203f2046616c73650014a02a6660c6a6660c6004294454cc1912411976616c75655f64656c74615f636865636b203f2046616c73650014a02a6660c6056294454cc191240116636f6e6669675f6861735f6e6674203f2046616c73650014a029405280a503300f00622253330653370e00666e0009002854ccc194c1700084cdc38008040a5014a0a6660c2a6660c2a6660c266e200192000153330613371000890000a99983099b8901a3370400c9000899b8800404714a029405280a5115333061300900615333061300900413371203400c294052808008a503330603375e64646464a6660c866e20008004530103d879800015333064337100020042980103d87b800014c103d87a8000337046eb4c1a4008dd69834983500199b82375a60d00046eb4c1a0c1a4004c190dd5182d19833261010000330664c10101004bd7018319baa0014c0103d87a80004a0944c194c188dd50008b19299982f982b0228a6103d87a80001533305f3371008a90000982c19832182c198321ba83006001330643750600c08a97ae04bd700982c19832182c198321ba800133064375008a97ae04bd7019b820013370008e08a66604c06e6eb8c0d4c180dd5180418301baa048375c604e60c06ea8c020c180dd50241bad30623063002375a60c200260ba6ea801054ccc168c14000c4c8c8c8c8c8c8c8c8c8c94ccc190c168c198dd50008992999832982e18339baa00113232325333068533306800a14a22a660d29201186c6f616e5f69735f706f736974697665203f2046616c73650014a02a6660d0a6660d0010294454cc1a524121696e7465726573745f726174655f69735f706f736974697665203f2046616c73650014a02a6660d0a6660d0012294454cc1a52411c7061737365735f6d696e5f7468726573686f6c64203f2046616c73650014a02a6660d0a6660d0002294454cc1a52411f76616c69645f636f6c6c61746572616c5f657869737473203f2046616c73650014a02a6660d0a6660d000e294454cc1a52411876616c69645f7472616e736974696f6e203f2046616c73650014a02a6660d0a6660d000c294454cc1a52411c76616c69645f696e7465726573745f7261746573203f2046616c73650014a02a6660d0060294454cc1a5240116636f6e6669675f6861735f6e6674203f2046616c73650014a029405280a5014a0294052819198008009bac3040306b375400644a6660da00229404c94ccc1a8cdd7983818369baa307000204314a226600600600260e000264a6660ce60bc60d26ea80084c8c8c8c94ccc1bcc1c80084c8c926330060022533306d3064306f375400226464a6660e660ec0042930b1bae3074001307037540022c6600a0064a6660d860c660dc6ea80044c8c8c8c94ccc1d0c1dc0084c926305f00316375a60ea00260ea00460e600260de6ea80045858dd6183800098380011bac306e001306a37540042c44646600200200644a6660dc00229309919801801983900118019838000983598341baa0011633010040305d33069306a3067375400297ae016303b30663754607660cc6ea8138cdc49919191919299983399b8800100513370666e00cdc10008018022410112f4266e0ccdc019b800043370400600a66e08cdc08008028012410112f466e0ccdc119b8004d00b4820225e8cdc00278269bad306b306c306c306c3068375402c6eb4c0acc19cdd500a99b82375a605a60cc6ea80512080897a375a607460ca6ea804c014cc038dd698339834002911299983219b87337020460120062a6660c866e1c0240084c16c0045280a5030080033371202c008600c0066eb4c18c004c18cc18cc18c008dd69830800982e9baa0041533305a3052003132323232323253330605333060300800514a22a660c2921166c6f616e5f616d745f636865636b203f2046616c73650014a02a6660c0a6660c0004294454cc1852411772657061795f616d745f636865636b203f2046616c73650014a02a6660c0a6660c0002294454cc1852411876616c69645f7472616e736974696f6e203f2046616c73650014a02a6660c0050294454cc185240116636f6e6669675f6861735f6e6674203f2046616c73650014a029405280a503300c375a60ca60cc006444a6660c466e1c00ccdc00108028a99983119b8700230090071305900114a02940cdc40018009bad30630013063002375a60c200260ba6ea80104c8c8c94ccc1754ccc174cdc40090010a51153305e49011c76616c69645f6d696e696d756d5f616d6f756e74203f2046616c73650014a02a6660baa6660ba002294454cc1792411876616c69645f7472616e736974696f6e203f2046616c73650014a02a6660ba04a294454cc179240116636f6e6669675f6861735f6e6674203f2046616c73650014a02940528198049bad30623063002222533305f3370e0060082a6660be60ac004260ac00229405281bad3061001305d37540086e05200037109000182c9baa001305c3059375404a460b860ba60ba60ba60ba60ba00244646600200200644a6660b80022980103d87a80001323232533305b3375e00c60ba006260a8660c000297ae0133005005002305d0023060002305e00122325333056304d3058375400226464a6660b060a060b46ea80044c94ccc164c140c16cdd500089919191919191919299983298340010991919191919191919192999835a999835a999835983099981a1bab3035306e375402a0786eb8c064c1b8dd502b08018a5014a22a660d89211b76616c69645f706f6f6c5f746f6b656e5f7478203f2046616c73650014a02a6660d6a6660d6008294454cc1b12411a76616c75655f6368616e67655f636865636b203f2046616c73650014a02a6660d6a6660d6002294454cc1b124115665f64656c74615f636865636b203f2046616c73650014a02a6660d6a6660d6004294454cc1b124114706172616d735f636865636b203f2046616c73650014a02a6660d6a6660d6012294454cc1b12411a6f75747075745f69735f706f736974697665203f2046616c73650014a02a6660d6a6660d600c294454cc1b124119647573745f61747461636b5f636865636b203f2046616c73650014a02a6660d600a294454cc1b124012176616c69645f706f6f6c5f6f75747075745f61646472657373203f2046616c73650014a029405280a5014a0294052819980b19b8100e053337020180a266e04028140cdd780782a182f19981881d81c9bae3016306b37540a666e1cccc0c000cdd7181f98351baa3031306a37540a46eb8c0c4c1a8dd5181898351baa0523330303756606260d46ea8044dd7181f98351baa3031306a37540a46eb8c0c4c1a8dd5181898351baa0523375e607c60d26ea80400e8c8cdd79ba63001002374c60026eacc0c0c1a4dd5008119820800a4410032323330010010393332225333069306000114bd6f7b6300991919800800a5eb7bdb180894ccc1c00044cc1c4cdd81ba9006374c00697adef6c601323232325333070300c3300d00a002133075337606ea4028dd30038028a99983819b8f00a002133075337606ea4028dd300380189983a99bb037520046e98004cc01801800cdd598390019bae30700023074002307200132330010014bd6f7b63011299983780089983819bb037520086ea000d2f5bded8c0264646464a6660de6016660180100042660e866ec0dd48041ba80070051533306f3371e0100042660e866ec0dd48041ba8007003133074337606ea4008dd4000998030030019bad3071003375c60de00460e600460e20026eb8c0f8c1a4dd5181818349baa051375c606060d26ea8c0c0c1a4dd502899b8100a04f222533306c0021001132333004004307000333223233001001005225333071001133072337606ea4010dd3001a5eb7bdb1804c8c8c8c94ccc1c4c034cc0380200084cc1d8cdd81ba9008374c00e00a2a6660e266e3c0200084c94ccc1c8c1a4c1d0dd500089983b99bb0375201260f060ea6ea80040104010c94ccc1c94ccc1d80045288a5014c103d87a80001306b33077374c00297ae03233300100100800222253330780021001132333004004307c0033322323300100100522533307d00113307e337606ea4010dd4001a5eb7bdb1804c8c8c8c94ccc1f4c064cc0680200084cc20804cdd81ba9008375000e00a2a6660fa66e3c0200084c94ccc1f8c1d4c20004dd50008998418099bb037520126108026102026ea80040104010c94ccc1f8c1d4004530103d87a8000130773308301375000297ae03370000e0022661040266ec0dd48011ba800133006006003375a60fe0066eb8c1f4008c20404008c1fc004dd7183b8009bad3078001307a002133076337606ea4008dd3000998030030019bab3073003375c60e200460ea00460e60026eb8c1ac004dd5983600098370011baf4c103d879800022533306533720004002298103d8798000153330653371e0040022980103d87a800014c103d87b80005333062337129000002099b894800001852818298038b1bad30660013066002375a60c800260c80046eb4c188004c188008c180004c170dd50008b182f182d9baa00116301e305a375400260b860b26ea800458ccc8c0040048894ccc1700085300103d87a800013232533305a3051003130533305f0024bd70099980280280099b8000348004c18000cc1780080cc0088c164c168c168c168c168c168c1680054ccc144c120c14cdd500109919191919191919299982e98300010a4c2c6eb4c178004c178008dd6982e000982e0011bad305a001305a002375a60b000260a86ea8008594ccc140c11cc148dd50068991919191919191919191919191919192999832183380109924c60a80022c60ca00260ca0046eb4c18c004c18c008dd6983080098308011bad305f001305f002375a60ba00260ba0046eb4c16c004c16c008dd6982c800982c8011bad30570013053375401a2c2c60aa00260aa0046eb4c14c004c14c008dd6982880098288011bad304f001304f002375a609a002609a0046eb4c12c004c12c008c124004c124008dd6982380098238011bad30450013045002375a6086002607e6ea800458c104c0f8dd50008b1800981e9baa3004303d375400c4608060826082002605c6660026eacc008c0ecdd51801181d9baa004034375c600660766ea808c888c94ccc0ecc0c4c0f4dd50008a400026eb4c104c0f8dd500099299981d9818981e9baa00114c0103d87a80001323300100137566084607e6ea8008894ccc104004530103d87a8000132323253330403371e00e6eb8c10800c4c0e4cc114dd4000a5eb804cc014014008dd698210011822801182180099198008008021129998200008a6103d87a80001323232533303f3371e00e6eb8c10400c4c0e0cc110dd3000a5eb804cc014014008dd59820801182200118210009181e981f0009181e181e981e981e981e981e981e981e800981d181b9baa001163300a01323375e6018606e6ea8004008c0e0c0e4008c0dc004c0ccdd50101bae3035303237540022c600c60626ea8008dd59819981a001181900098171baa30313032302e37546062605c6ea800458cc0040308cdd7980198171baa00100422323300100100322533303100114c103d87a800013232533302f300500213028330340024bd70099802002000981a801181980091817800981698151baa00b16330013756605800691010022323300100100322533302d00114bd6f7b630099191919299981699b8f0070021003133032337606ea4008dd3000998030030019bab302f003375c605a0046062004605e0026eacc0a8c0acc0acc0acc0acc0ac004c0a8c0a8008dd6181400098140011bac302600130260023758604800260406ea8c08c008c088c08c004c078dd50041bad30203021002375a603e002603e0046eb4c074004c074008c06c004c05cdd50078a4c26caca666024601260286ea80084c8c8c8c8c8c94ccc070c07c0084c8c8c92632533301b30120011323253330213024002132498c03000458c088004c078dd50020a99980d98088008a99980f980f1baa00414985858c070dd5001980400219299980c980800089919299980f981100109924c64a6660386026002264646464a666048604e0042930b1bad30250013025002375a6046002603e6ea800854ccc070c0480044c8c8c8c8c8c8c8c8c8c94ccc0a8c0b400852616375a605600260560046eb4c0a4004c0a4008dd7181380098138011bad30250013025002375a6046002603e6ea800854ccc070c0500044c8c8c8c8c8c94ccc098c0a400852616375a604e002604e0046eb4c094004c094008dd69811800980f9baa0021533301c3370e9003000899191919299981218138010a4c2c6eb4c094004c094008dd69811800980f9baa00216301d37540022c604000260386ea801854ccc064c03c00454ccc074c070dd50030a4c2c2c60346ea801458c074004c074008c06c004c06c008c064004c054dd50010b129998091804980a1baa001132323232533301a301d0021324994ccc058c034c060dd500189919299980e180f8010a4c2c6eb8c074004c064dd50018b0b1bad301b001301b0023019001301537540022ca66601e600c60226ea80284c8c8c8c8c8c8c8c94ccc06cc0780084c926300900716375a603800260380046eb4c068004c068008dd6980c000980c001180b00098091baa00a162533300f300630113754002264646464646464646464646464646464a666046604c004264646464646493180b805180b005980a806180a006980980718098078b1bae30240013024002375c6044002604400460400026040004603c002603c004603800260380046034002603400460300026030004602c00260246ea80045894ccc038c014c040dd5000899191919299980b180c8010a4c2c6eb8c05c004c05c008dd7180a80098089baa001162533300d3004300f3754002264646464a66602a60300042646493192999809980500089919299980c980e00109924c64a66602c601a00226464a666038603e0042649318068008b180e800980c9baa00215333016300c001132323232323253330203023002149858dd6981080098108011bad301f001301f002375a603a00260326ea800858c05cdd50008b180d000980b1baa00315333013300900115333017301637540062930b0b180a1baa002300600316301600130160023014001301037540022c464a66601a600800226464a666026602c0042930b1bae3014001301037540042a66601a600600226464a666026602c0042930b1bae3014001301037540042c601c6ea8004c044c038dd50029b8748008dc3a40006e1d2004374a90001bae001375c002ae695ce2ab9d5573caae7d5d02ba15745",
        [delegatorNftPolicy, poolConfigScriptHash],
        {
          dataType: "list",
          items: [{ dataType: "bytes" }, { dataType: "bytes" }],
        } as any,
      ),
    };
  },

  {
    redeemer: {
      title: "PoolNFTAction",
      anyOf: [
        {
          title: "MintPoolNFT",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              anyOf: [
                {
                  title: "PoolCreateDetails",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "integer", title: "outputIndex" },
                    { dataType: "bytes", title: "initialPoolDelegation" },
                  ],
                },
              ],
            },
          ],
        },
        {
          title: "BurnPoolNFT",
          dataType: "constructor",
          index: 1,
          fields: [{ dataType: "bytes" }],
        },
      ],
    },
  },
) as unknown as PoolMint;

export interface PoolConfigSpend {
  new (govNft: { policyId: string; assetName: string }): Validator;
  datum: {
    liquidationThreshold: bigint;
    initialCollateralRatio: bigint;
    poolFee: bigint;
    loanFeeDetails: {
      tier_1Fee: bigint;
      tier_1Threshold: bigint;
      tier_2Fee: bigint;
      tier_2Threshold: bigint;
      tier_3Fee: bigint;
      tier_3Threshold: bigint;
      liquidationFee: bigint;
      platformFeeCollectorAddress: {
        paymentCredential:
          | { VerificationKeyCredential: [string] }
          | { ScriptCredential: [string] };
        stakeCredential:
          | {
              Inline: [
                | { VerificationKeyCredential: [string] }
                | { ScriptCredential: [string] },
              ];
            }
          | {
              Pointer: {
                slotNumber: bigint;
                transactionIndex: bigint;
                certificateIndex: bigint;
              };
            }
          | null;
      };
    };
    mergeActionFee: bigint;
    minTransition: bigint;
    minLoan: bigint;
    minFee: bigint;
    minLiquidationFee: bigint;
    interestParams: {
      optimalUtilization: bigint;
      baseInterestRate: bigint;
      rslope1: bigint;
      rslope2: bigint;
    };
  };
  redeemer: {
    wrapper: { poolConfigOutputIndex: bigint; feeCollectorOutputIndex: bigint };
  };
}

export const PoolConfigSpend = Object.assign(
  function (govNft: { policyId: string; assetName: string }) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "590ca001000032323232323232322225323232333007300230093754008264a666010646464a666016600c601a6ea80044c8ccccc888894ccc044c030c04cdd5002099299980919998030018011b94376600290010991980080080291299980c0008a5013253330153375e603660306ea8c06c008010528899801801800980d8008a503017301437540082666600a0040026eb8c05cc050dd500224002444466ebcdd3192999808980598099baa00114bd6f7b63009bab3017301437540026466002002646600200200c44a66602e002297adef6c6013232323253330173371e910100002100313301c337606ea4008dd3000998030030019bab3019003375c602e0046036004603200244a66602c002298103d87a8000132323253330153371e0106eb8c05c00c4c044cc068dd3000a5eb804cc014014008dd5980b801180d001180c0009ba633015337606ea4008dd4000a5eb7bdb180c048c03cdd50051bac30120013756602460266026602660260026eb8c048c03cdd500118071baa00214a060206022004601e00260166ea801452613656533300730023009375400a264646464a66601e6024004264931929998061803800899191919299980a180b80109924ca666020601660246ea800c4c8c8c8c94ccc060c06c0084c9265333014300f3016375400626464a666034603a0042930b1bae301b001301737540062c2c6eb4c064004c064008c05c004c04cdd50018b0b1bad301500130150023013001300f37540082a666018600c00226464a666024602a0042930b1bae3013001300f37540082c601a6ea800c58c94ccc02cc018c03400454ccc03cc0380045261616375460200026020004601c00260146ea8014584cc8c8c8c88c894ccc038c8c8c8c8c8c8c8c8c8c8c8c8c8c94ccc070c058c078dd50050991919192999810180d98111baa0011323232325333024301e30263754002264646464a666050604660546ea80044c8c8c8c8c94ccc0c4c0d00084c94ccc0b8c0a0dd6981880109919191919299981999b8748010c0d4dd5000899299981a1817981b1baa00113232323232323232323232323232323232323232533304c304f00213232323232323232325333051304c305337540022646464a6660a8a6660a864a6660aa60a060ae6ea80044c94ccc158c144c160dd5000899191980080081e91299982e8008a50132533305a3371e6eb8c18000801052889980180180098300009bae305c30593754002264646600200207c44a6660ba00229404c94ccc168cdd7802182e18300010a51133003003001306000130523305b0014bd70182d982c1baa305b3058375460b660b860b06ea8c16cc160dd50008a503303603e2304f3330263756604e60b06ea8c09cc160dd50008230228a51153305549114676f765f617070726f76616c203f2046616c73650014a02a6660a8a6660a8010294454cc1552411d666565735f6172655f6e6f745f6e65676174697665203f2046616c73650014a02a6660a8a6660a8004294454cc1552412b6c69717569646174696f6e735f706172616d735f6172655f6e6f745f6368616e676564203f2046616c73650014a02a6660a8a6660a8006294454cc1552412376616c69645f6665655f636f6c6c6563746f725f61646472657373203f2046616c73650014a02a6660a8a6660a8048294454cc1552411f636f6e6669675f6f75747075745f6e66745f636865636b203f2046616c73650014a02a6660a8a6660a8056294454cc1552412376616c69645f636f6e6669675f6f75747075745f61646472657373203f2046616c73650014a02a6660a8a6660a800e294454cc155241236d696e5f76616c7565735f6172655f6e6f745f6e65676174697665203f2046616c73650014a02a6660a8a6660a800c294454cc1552411576616c69645f6d696e5f666565203f2046616c73650014a02a6660a8a6660a800a294454cc1552411e76616c69645f6d657267655f616374696f6e5f666565203f2046616c73650014a02a6660a8002294454cc15524011d76616c69645f696e7465726573745f706172616d73203f2046616c73650014a029405280a5014a029405280a5014a029414ccc14cc020dd6981b182b1baa00c153330533008375a604a60ac6ea80304cdc41bad3022305637540186eb4c024c158dd50060a5014a0a6660a466e1c074dd6981a982a9baa05013370e0366eb4c090c154dd50280a503375e606860a86ea8c15cc150dd5000982b982c182c182c182c182c182c182c182a1baa016163302a038375a604460a66ea8114cdc400b00919b8901500b533304d300200e1300200c14a0a66609860020262a66609860026eb4c0bcc13cdd50088a99982618009bad301b304f37540222a66609860026eb4c148c14cc14cc14cc14cc13cdd50088a99982618009bad3052305330533053305330533053304f37540222a66609860026eb4c078c13cdd50088a99982619b88375a603c609e6ea8044dd6980118279baa0111533304c337106eb4c008c13cdd50089bad305230533053305330533053304f37540222a666098600201e266e21200000714a029405280a5014a029405280a5014a06e252000230513052305230520013040002304000d16304d001304d002375a609600260960046eb4c124004c124008dd6982380098238011bad30450013045002375a60860026086004608200260820046eb4c0fc004c0fc008dd6981e800981e8011bad303b001303737540022c6072606c6ea800458c004c0d4dd50051181c181c981c80098151998009bab30023033375401001800644464a666066605a606a6ea8004520001375a6072606c6ea8004c94ccc0ccc0b4c0d4dd50008a60103d87a80001323300100137566074606e6ea8008894ccc0e4004530103d87a8000132323253330383371e00e6eb8c0e800c4c0d0cc0f4dd4000a5eb804cc014014008dd6981d001181e801181d800998040018011181a981b0008b1bae302f00116303200132533302c3026302e3754002297adef6c60137566064605e6ea8004cc00402401c88c8cc00400400c894ccc0c80045300103d87a8000132323253330313371e00c6eb8c0cc00c4c0b4cc0d8dd3000a5eb804cc014014008dd59819801181b001181a00099baf300c302c3754002010605c60566ea800458cc00403cdd6980518151baa01c3001001222533302c00214c0103d87a800013232533302a3025003130263302f0024bd70099980280280099b8000348004c0c000cc0b8008dd7181518139baa001163006302637540046eacc0a0c0a4008c09c004c08cdd51813181398119baa3026302337540022c66002016466ebcc00cc08cdd50008021119198008008019129998130008a6103d87a8000132325333024300500213020330290024bd7009980200200098150011814000918120009811180f9baa00a1637586042604460440046eacc080004c080c080c080c080008dd6180f000980f0011bac301c001301c00237586034002602c6ea8c064008c060c064004c050dd50021bae30163017002375c602a00260226ea803452613656533300c3007300e3754002264646464a666028602e0042930b1bad30150013015002375a6026002601e6ea8004594ccc028c014c030dd500409919191919191919191919191919191919191919299981118128010991924c602c004602c01a2c604600260460046eb4c084004c084008dd6980f800980f8011bad301d001301d002375a603600260360046eb4c064004c064008c05c004c05c008dd6980a800980a8011bad30130013013002375a6022002601a6ea80205894ccc028c014c030dd500089919191919191919299980b180c8010a4c2c6eb4c05c004c05c008dd6980a800980a8011bad30130013013002375a6022002601a6ea80045894ccc024c010c02cdd5000899191919191919191919191919191919299980e981000109924ca666032602860366ea80044c8c8c8c94ccc084c0900084c8c92632533301f301a0011323253330253028002132498c94ccc088c0740044c8c94ccc0a0c0ac0084c926301d001163029001302537540042a66604460380022646464646464a666058605e0042930b1bad302d001302d002375a605600260560046eb4c0a4004c094dd50010b18119baa001163026001302237540062a66603e60320022a66604660446ea800c526161630203754004602c0062c60440026044004604000260386ea80045858c078004c078008dd6980e000980e0011bad301a001301a002375a603000260300046eb4c058004c058008dd6980a000980a0011bad30120013012002375a602000260186ea8004588c94ccc024c0100044c8c94ccc03cc04800852616375c602000260186ea800854ccc024c00c0044c8c94ccc03cc04800852616375c602000260186ea800858c028dd5000980698051baa004370e90011b8748000dd2a4000ae695ce2ab9d5573caae7d5d02ba15745",
        [govNft],
        {
          dataType: "list",
          items: [
            {
              title: "AssetClass",
              description:
                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
              anyOf: [
                {
                  title: "AssetClass",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "policyId" },
                    { dataType: "bytes", title: "assetName" },
                  ],
                },
              ],
            },
          ],
        } as any,
      ),
    };
  },
  {
    datum: {
      title: "Config",
      anyOf: [
        {
          title: "Config",
          dataType: "constructor",
          index: 0,
          fields: [
            { dataType: "integer", title: "liquidationThreshold" },
            { dataType: "integer", title: "initialCollateralRatio" },
            { dataType: "integer", title: "poolFee" },
            {
              title: "loanFeeDetails",
              anyOf: [
                {
                  title: "PlatformFeeDetails",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "integer", title: "tier_1Fee" },
                    { dataType: "integer", title: "tier_1Threshold" },
                    { dataType: "integer", title: "tier_2Fee" },
                    { dataType: "integer", title: "tier_2Threshold" },
                    { dataType: "integer", title: "tier_3Fee" },
                    { dataType: "integer", title: "tier_3Threshold" },
                    { dataType: "integer", title: "liquidationFee" },
                    {
                      title: "platformFeeCollectorAddress",
                      description:
                        "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
                      anyOf: [
                        {
                          title: "Address",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              title: "paymentCredential",
                              description:
                                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                              anyOf: [
                                {
                                  title: "VerificationKeyCredential",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [{ dataType: "bytes" }],
                                },
                                {
                                  title: "ScriptCredential",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [{ dataType: "bytes" }],
                                },
                              ],
                            },
                            {
                              title: "stakeCredential",
                              anyOf: [
                                {
                                  title: "Some",
                                  description: "An optional value.",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    {
                                      description:
                                        "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
                                      anyOf: [
                                        {
                                          title: "Inline",
                                          dataType: "constructor",
                                          index: 0,
                                          fields: [
                                            {
                                              description:
                                                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                                              anyOf: [
                                                {
                                                  title:
                                                    "VerificationKeyCredential",
                                                  dataType: "constructor",
                                                  index: 0,
                                                  fields: [
                                                    { dataType: "bytes" },
                                                  ],
                                                },
                                                {
                                                  title: "ScriptCredential",
                                                  dataType: "constructor",
                                                  index: 1,
                                                  fields: [
                                                    { dataType: "bytes" },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                        {
                                          title: "Pointer",
                                          dataType: "constructor",
                                          index: 1,
                                          fields: [
                                            {
                                              dataType: "integer",
                                              title: "slotNumber",
                                            },
                                            {
                                              dataType: "integer",
                                              title: "transactionIndex",
                                            },
                                            {
                                              dataType: "integer",
                                              title: "certificateIndex",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                                {
                                  title: "None",
                                  description: "Nothing.",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            { dataType: "integer", title: "mergeActionFee" },
            { dataType: "integer", title: "minTransition" },
            { dataType: "integer", title: "minLoan" },
            { dataType: "integer", title: "minFee" },
            { dataType: "integer", title: "minLiquidationFee" },
            {
              title: "interestParams",
              anyOf: [
                {
                  title: "InterestParams",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "integer", title: "optimalUtilization" },
                    { dataType: "integer", title: "baseInterestRate" },
                    { dataType: "integer", title: "rslope1" },
                    { dataType: "integer", title: "rslope2" },
                  ],
                },
              ],
            },
          ],
        },
      ],
    },
  },
  {
    redeemer: {
      title: "Wrapped Redeemer",
      description:
        "A redeemer wrapped in an extra constructor to make multi-validator detection possible on-chain.",
      anyOf: [
        {
          dataType: "constructor",
          index: 1,
          fields: [
            {
              anyOf: [
                {
                  title: "ConfigRedeemer",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "integer", title: "poolConfigOutputIndex" },
                    { dataType: "integer", title: "feeCollectorOutputIndex" },
                  ],
                },
              ],
            },
          ],
        },
      ],
    },
  },
) as unknown as PoolConfigSpend;

export interface PoolConfigMint {
  new (govNft: { policyId: string; assetName: string }): Validator;
  r: {
    action:
      | {
          MintNFT: [
            { transactionId: { hash: string }; outputIndex: bigint },
            bigint,
          ];
        }
      | { BurnNFT: [string] };
    inner: undefined;
  };
}

export const PoolConfigMint = Object.assign(
  function (govNft: { policyId: string; assetName: string }) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "590ca001000032323232323232322225323232333007300230093754008264a666010646464a666016600c601a6ea80044c8ccccc888894ccc044c030c04cdd5002099299980919998030018011b94376600290010991980080080291299980c0008a5013253330153375e603660306ea8c06c008010528899801801800980d8008a503017301437540082666600a0040026eb8c05cc050dd500224002444466ebcdd3192999808980598099baa00114bd6f7b63009bab3017301437540026466002002646600200200c44a66602e002297adef6c6013232323253330173371e910100002100313301c337606ea4008dd3000998030030019bab3019003375c602e0046036004603200244a66602c002298103d87a8000132323253330153371e0106eb8c05c00c4c044cc068dd3000a5eb804cc014014008dd5980b801180d001180c0009ba633015337606ea4008dd4000a5eb7bdb180c048c03cdd50051bac30120013756602460266026602660260026eb8c048c03cdd500118071baa00214a060206022004601e00260166ea801452613656533300730023009375400a264646464a66601e6024004264931929998061803800899191919299980a180b80109924ca666020601660246ea800c4c8c8c8c94ccc060c06c0084c9265333014300f3016375400626464a666034603a0042930b1bae301b001301737540062c2c6eb4c064004c064008c05c004c04cdd50018b0b1bad301500130150023013001300f37540082a666018600c00226464a666024602a0042930b1bae3013001300f37540082c601a6ea800c58c94ccc02cc018c03400454ccc03cc0380045261616375460200026020004601c00260146ea8014584cc8c8c8c88c894ccc038c8c8c8c8c8c8c8c8c8c8c8c8c8c94ccc070c058c078dd50050991919192999810180d98111baa0011323232325333024301e30263754002264646464a666050604660546ea80044c8c8c8c8c94ccc0c4c0d00084c94ccc0b8c0a0dd6981880109919191919299981999b8748010c0d4dd5000899299981a1817981b1baa00113232323232323232323232323232323232323232533304c304f00213232323232323232325333051304c305337540022646464a6660a8a6660a864a6660aa60a060ae6ea80044c94ccc158c144c160dd5000899191980080081e91299982e8008a50132533305a3371e6eb8c18000801052889980180180098300009bae305c30593754002264646600200207c44a6660ba00229404c94ccc168cdd7802182e18300010a51133003003001306000130523305b0014bd70182d982c1baa305b3058375460b660b860b06ea8c16cc160dd50008a503303603e2304f3330263756604e60b06ea8c09cc160dd50008230228a51153305549114676f765f617070726f76616c203f2046616c73650014a02a6660a8a6660a8010294454cc1552411d666565735f6172655f6e6f745f6e65676174697665203f2046616c73650014a02a6660a8a6660a8004294454cc1552412b6c69717569646174696f6e735f706172616d735f6172655f6e6f745f6368616e676564203f2046616c73650014a02a6660a8a6660a8006294454cc1552412376616c69645f6665655f636f6c6c6563746f725f61646472657373203f2046616c73650014a02a6660a8a6660a8048294454cc1552411f636f6e6669675f6f75747075745f6e66745f636865636b203f2046616c73650014a02a6660a8a6660a8056294454cc1552412376616c69645f636f6e6669675f6f75747075745f61646472657373203f2046616c73650014a02a6660a8a6660a800e294454cc155241236d696e5f76616c7565735f6172655f6e6f745f6e65676174697665203f2046616c73650014a02a6660a8a6660a800c294454cc1552411576616c69645f6d696e5f666565203f2046616c73650014a02a6660a8a6660a800a294454cc1552411e76616c69645f6d657267655f616374696f6e5f666565203f2046616c73650014a02a6660a8002294454cc15524011d76616c69645f696e7465726573745f706172616d73203f2046616c73650014a029405280a5014a029405280a5014a029414ccc14cc020dd6981b182b1baa00c153330533008375a604a60ac6ea80304cdc41bad3022305637540186eb4c024c158dd50060a5014a0a6660a466e1c074dd6981a982a9baa05013370e0366eb4c090c154dd50280a503375e606860a86ea8c15cc150dd5000982b982c182c182c182c182c182c182c182a1baa016163302a038375a604460a66ea8114cdc400b00919b8901500b533304d300200e1300200c14a0a66609860020262a66609860026eb4c0bcc13cdd50088a99982618009bad301b304f37540222a66609860026eb4c148c14cc14cc14cc14cc13cdd50088a99982618009bad3052305330533053305330533053304f37540222a66609860026eb4c078c13cdd50088a99982619b88375a603c609e6ea8044dd6980118279baa0111533304c337106eb4c008c13cdd50089bad305230533053305330533053304f37540222a666098600201e266e21200000714a029405280a5014a029405280a5014a06e252000230513052305230520013040002304000d16304d001304d002375a609600260960046eb4c124004c124008dd6982380098238011bad30450013045002375a60860026086004608200260820046eb4c0fc004c0fc008dd6981e800981e8011bad303b001303737540022c6072606c6ea800458c004c0d4dd50051181c181c981c80098151998009bab30023033375401001800644464a666066605a606a6ea8004520001375a6072606c6ea8004c94ccc0ccc0b4c0d4dd50008a60103d87a80001323300100137566074606e6ea8008894ccc0e4004530103d87a8000132323253330383371e00e6eb8c0e800c4c0d0cc0f4dd4000a5eb804cc014014008dd6981d001181e801181d800998040018011181a981b0008b1bae302f00116303200132533302c3026302e3754002297adef6c60137566064605e6ea8004cc00402401c88c8cc00400400c894ccc0c80045300103d87a8000132323253330313371e00c6eb8c0cc00c4c0b4cc0d8dd3000a5eb804cc014014008dd59819801181b001181a00099baf300c302c3754002010605c60566ea800458cc00403cdd6980518151baa01c3001001222533302c00214c0103d87a800013232533302a3025003130263302f0024bd70099980280280099b8000348004c0c000cc0b8008dd7181518139baa001163006302637540046eacc0a0c0a4008c09c004c08cdd51813181398119baa3026302337540022c66002016466ebcc00cc08cdd50008021119198008008019129998130008a6103d87a8000132325333024300500213020330290024bd7009980200200098150011814000918120009811180f9baa00a1637586042604460440046eacc080004c080c080c080c080008dd6180f000980f0011bac301c001301c00237586034002602c6ea8c064008c060c064004c050dd50021bae30163017002375c602a00260226ea803452613656533300c3007300e3754002264646464a666028602e0042930b1bad30150013015002375a6026002601e6ea8004594ccc028c014c030dd500409919191919191919191919191919191919191919299981118128010991924c602c004602c01a2c604600260460046eb4c084004c084008dd6980f800980f8011bad301d001301d002375a603600260360046eb4c064004c064008c05c004c05c008dd6980a800980a8011bad30130013013002375a6022002601a6ea80205894ccc028c014c030dd500089919191919191919299980b180c8010a4c2c6eb4c05c004c05c008dd6980a800980a8011bad30130013013002375a6022002601a6ea80045894ccc024c010c02cdd5000899191919191919191919191919191919299980e981000109924ca666032602860366ea80044c8c8c8c94ccc084c0900084c8c92632533301f301a0011323253330253028002132498c94ccc088c0740044c8c94ccc0a0c0ac0084c926301d001163029001302537540042a66604460380022646464646464a666058605e0042930b1bad302d001302d002375a605600260560046eb4c0a4004c094dd50010b18119baa001163026001302237540062a66603e60320022a66604660446ea800c526161630203754004602c0062c60440026044004604000260386ea80045858c078004c078008dd6980e000980e0011bad301a001301a002375a603000260300046eb4c058004c058008dd6980a000980a0011bad30120013012002375a602000260186ea8004588c94ccc024c0100044c8c94ccc03cc04800852616375c602000260186ea800854ccc024c00c0044c8c94ccc03cc04800852616375c602000260186ea800858c028dd5000980698051baa004370e90011b8748000dd2a4000ae695ce2ab9d5573caae7d5d02ba15745",
        [govNft],
        {
          dataType: "list",
          items: [
            {
              title: "AssetClass",
              description:
                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
              anyOf: [
                {
                  title: "AssetClass",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "policyId" },
                    { dataType: "bytes", title: "assetName" },
                  ],
                },
              ],
            },
          ],
        } as any,
      ),
    };
  },

  {
    r: {
      title: "NFTRedeemerElement",
      anyOf: [
        {
          title: "NFTRedeemerElement",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              title: "action",
              anyOf: [
                {
                  title: "MintNFT",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      description:
                        "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
                      anyOf: [
                        {
                          title: "OutputReference",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              title: "transactionId",
                              description:
                                "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                              anyOf: [
                                {
                                  title: "TransactionId",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    { dataType: "bytes", title: "hash" },
                                  ],
                                },
                              ],
                            },
                            { dataType: "integer", title: "outputIndex" },
                          ],
                        },
                      ],
                    },
                    { dataType: "integer" },
                  ],
                },
                {
                  title: "BurnNFT",
                  dataType: "constructor",
                  index: 1,
                  fields: [{ dataType: "bytes" }],
                },
              ],
            },
            {
              title: "inner",
              description: "The nullary constructor.",
              anyOf: [{ dataType: "constructor", index: 0, fields: [] }],
            },
          ],
        },
      ],
    },
  },
) as unknown as PoolConfigMint;

export interface PoolStakePoolStake {
  new (
    poolNftPolicy: string,
    delegationNft: { policyId: string; assetName: string },
    utxoToConsume: { transactionId: { hash: string }; outputIndex: bigint },
  ): Validator;
  redeemer:
    | {
        Publish: [
          {
            poolOwnerOref: {
              transactionId: { hash: string };
              outputIndex: bigint;
            };
          },
        ];
      }
    | {
        Withdraw: [
          {
            action: "ExactWithdrawal" | "SwapWithdrawal";
            poolOref: { transactionId: { hash: string }; outputIndex: bigint };
          },
        ];
      }
    | {
        CreatePool: [{ transactionId: { hash: string }; outputIndex: bigint }];
      };
}

export const PoolStakePoolStake = Object.assign(
  function (
    poolNftPolicy: string,
    delegationNft: { policyId: string; assetName: string },
    utxoToConsume: { transactionId: { hash: string }; outputIndex: bigint },
  ) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "5912e301000032323232323232323223222232323232322533300c323232323232323232532333016301000713253330173002301937540122646464a6660346028002264a666036602a603a6ea80044c04cccc01cdd59805180f1baa300a301e37546042603c6ea8004dd71805980f1baa018375c6014603c6ea806058cc01c00c8cdd79805980f1baa0010031533301a3011001132533301b3015301d37540022602666600e6eacc028c078dd51805180f1baa3021301e37540026eb8c02cc078dd500c1bae300a301e37540302c6600e006466ebcc02cc078dd50008018a99980d1809000899299980d980a980e9baa0011301333300737566014603c6ea8c028c078dd51810980f1baa001375c6016603c6ea8060dd71805180f1baa018163300700323375e6016603c6ea800400c528180d9baa301f301c3754016603c60366ea8008dd6180e980d1baa00a16301c30193754022264a66602e601e010264a666030601e60346ea80284cc8c8c8c8c8c8c8c8c8c8c8c8c8c8c88c8c8c8c8c8c8c8c8c8c8c8c94ccc0d0c0b8c0d8dd5000899299981a9817981b9baa00e1325333036302e3038375400226464a666070605e60746ea80044c8c8c94ccc0ecc0ccc0f4dd500089919299981e981b981f9baa00113232533303f303930413754002264a666080607060846ea80044c8c94ccc118c1240084c8c94ccc110c0f8c118dd50008992999822981818239baa00113232533048302337500042a6609060466ea002854ccc11cc104c124dd500b0a999823a99982399b8900a00214a22a66090920114616d6f756e745f636865636b203f2046616c73650014a02a66608ea66608e022294454cc121241116e66745f636865636b203f2046616c73650014a02a66608e002294454cc12124011461737365745f69735f616461203f2046616c73650014a0294052809929982498121ba800115333048533304833712002006294454cc125240114616d6f756e745f636865636b203f2046616c73650014a02a666090024294454cc1252401116e66745f636865636b203f2046616c73650014a029414ccc11c00440284c94ccc120c108c128dd50008992999824982198259baa00113232533304b3045304d3754002264a666098608c609c6ea80044c098c148c13cdd50008b19192999826982298279baa00114c103d87a80001303b330523232303d33054375066e08dd6982a8011bad305500133054375066e08dd6982a982b0011bad305530560014bd7018289baa30543051375400460a06ea80092f5c0646464a66609e66e2000920001303d33054303d3305437506066002660a86ea0c0cc0092f5c097ae01533304f3371090000010981e9982a181e9982a1ba800133054375000497ae04bd700a60103d87a8000375a60a860aa0046eb4c14c004c13cdd5182918279baa002302600e163322533304c304600114c0103d87a80001533304c3371000290000981d19828981d198289ba83030002330513750606000297ae04bd700981d19828981d198289ba800233051375000297ae04bd701bad3039304d37540026eb4c0a0c134dd5000982798261baa001132323370666e08cdc1000a41941e6eb4c0e8c138dd500119b80337046eb4c0a4c138dd5001241a01e66e0920ca0f0013024302500d304f304c3754002609c60966ea800458c8c94ccc124c10cc12cdd500089919192999826182218271baa001132533304d337120246eb4c0b0c140dd50008981d9982919ba548008cc1480052f5c097ae0153304e4901116f7261636c6520697320657870697265640014c103d87a80003052304f3754002264a66609a66e24048dd6981618281baa0011303b33052303b330520014bd7025eb8054cc139241116f7261636c6520697320657870697265640014c103d87a80003052304f37540026076609c6ea80094ccc128c110c130dd50008991919192999829182a8010991924c646600200200644a6660aa00229309919801801982c8011929998291826182a1baa001132323232533305a305d002149858dd6982d800982d8011bae3059001305537540022c60ae00264a66609e609200226464a6660aa60b0004264932999828982598299baa00113232323232323232533305d3060002132498c10001c58dd6982f000982f0011bad305c001305c002375a60b400260b400460b000260a86ea80045858c158004c148dd50020a999827982380089919299982a982c00109924ca6660a2609660a66ea80044c8c8c8c8c8c8c8c94ccc174c1800084c926304000716375a60bc00260bc0046eb4c170004c170008dd6982d000982d001182c000982a1baa00116163056001305237540082c60a06ea800c58dd618298009829801182880098269baa00116304f304c37540022c6604a03266e9520043304d30363304d3038304b3754607060966ea8c0dcc12cdd51991192999825982298269baa00113051304e37540022c6606e0404608666606e6eacc0e8c138dd5181d18271baa001003002375c607060966ea8004dd7181b98259baa0014bd7025eb80c0c4c128dd5181b98251baa00f3371e6eb8c0d8c124dd5181a98249baa30363049375401c910100375a609660906ea800458c128c11cdd50008b181998231baa0025333042303c304437540022646464646464a666098609e0042646464931929998259822800899192999828982a00109924c608c0022c60a4002609c6ea801054ccc12cc10c00454ccc13cc138dd50020a4c2c2c60986ea800cc108010c94ccc124c10c0044c8c94ccc13cc1480084c92632533304c304600113232323253330543057002149858dd6982a800982a8011bad3053001304f37540042a6660986088002264646464646464646464a6660b460ba0042930b1bad305b001305b002375a60b200260b20046eb8c15c004c15c008dd6982a800982a8011bad3053001304f37540042a66609860860022646464646464a6660ac60b20042930b1bad30570013057002375a60aa00260aa0046eb4c14c004c13cdd50010a999826181b800899191919299982a182b8010a4c2c6eb4c154004c154008dd6982980098279baa00216304d37540022c60a000260986ea801854ccc124c10400454ccc134c130dd50030a4c2c2c60946ea801458c134004c134008c12c004c12c008c124004c114dd50008b0b182380098219baa001163045304237540022c6603601e66e9520023304300c4bd7019b80375a608660806ea800520ff91f40116323300100101122533304200114c103d87a8000132323253330413375e03460860062605e6608c6ea00052f5c026600a00a0046eb4c10c008c118008c110004dd69820981f1baa00116302a303d37546052607a6ea80314ccc0e4c0ccc0ecdd5000899191919191919192999822982400109924ca666082607660866ea801c4c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c94ccc154c1600084c8c8c8c8c8c926303d00a303c00b303b00c303a00d303900e5333051304b3053375401e264646464a6660b260b8004264649319299982b982880089919299982e983000109924c64a6660b460a800226464a6660c060c60042649318220008b1830800982e9baa0021533305a3052001132323232323253330643067002149858dd6983280098328011bad30630013063002375a60c200260ba6ea800858c16cdd50008b182f000982d1baa00315333057304f0011533305b305a37540062930b0b182c1baa002303d00316305a001305a00230580013054375401e2c2c6eb8c158004c158008dd7182a000982a0011829000982900118280009828001182700098270011826000982600118250009825001182400098221baa0071616375a608c002608c0046eb4c110004c110008dd6982100098210011820000981e1baa00116303e303b37540022c602a60746ea8c098c0e8dd500198171998111bab302530393754604a60726ea80080d0dd7181e181c9baa00116303b3038375401c2c6074606e6ea800458cc080dd6181c805919baf30243037375400200460706072004606e00260666ea8064dd5981a981b181b001181a000981a0011bab30320013032303230323032303200237586060002606000260566ea806c8c8cdc21bad302e001375a605c605e00260546ea80048c050cc0acdd400099815a610101004bd7011b993300500148810022323300100100322533302b00114c0103d87a80001323232533302a3375e00c6058006260306605e00297ae0133005005002302c002302f002302d00123029302a302a001230283029302930290013001001222533333302a00213232323232323300b0020013371491010128000025333026337100069007099b80483c80400c54ccc098cdc4001a410004266e00cdc0241002800690068a99813a4929576861742061726520796f7520646f696e673f204e6f2049206d65616e2c20736572696f75736c792e001653330290011337149101035b5d2900004133714911035b5f2000375c605066600e00266ec1300102415d00375266e292210129000042233760980103422c2000375266601001000466e28dd718148009bae302a0013758604e0046eb4c094004c8cdd81ba83025001374e604c0026ea80084c94ccc09c0044cdc5245027b7d00002133714911037b5f2000375c604c64646600200200644a66605400220062664466ec130103422c20003752666012012605400466e29221023a2000333009009302b002337146eb8c0a8004dd71815800981600099801001181680099bb04c10342207d0037520046eac0084c94ccc09c0044cdc52441025b5d00002133714911035b5f2000375c604c66600a00266ec1300102415d0037520044466ec1300103422c2000375266600c00c00466e28dd718138009bae3028001375800426600a6eb40080044c8c8cdc524410268270000132333001001337006e3400920013371491101270000322253330263371000490000800899191919980300319b8000548004cdc599b80002533302933710004900a0a40c02903719b8b33700002a66605266e2000520141481805206e0043370c004901019b8300148080cdc70020011bae00222232330010010042253330270011004133003302900133002002302a001223233001001003225333021301b00113371491101300000315333021337100029000099b8a489012d0033002002300500113300633708002900a19b8b3370066e1400520144818000cdc0a40006002002444a66603a66e2400920001001133300300333708004900a19b8b3370066e1400920144818000494ccc068c050c070dd5000899191919299981118128010a4c2c6eb8c08c004c08c008dd71810800980e9baa00116232533301a30140011323253330203023002149858dd71810800980e9baa0021533301a30120011323253330203023002149858dd71810800980e9baa00216301b3754002603c60366ea802858c074c068dd5009099299980c1801980d1baa00a13253330193010301b3754002264a666034602860386ea80044c94ccc06cc04cc074dd5000899299980e19198008009bac300d3020375402044a66604400229404c94ccc07ccdd7980798111baa302500200814a2266006006002604a0022a666038002266ebc0600145280a50301333300732330010013756600c603e6ea803c894ccc08400452f5bded8c0264646464a66604266e3d2201000021003133026337606ea4008dd3000998030030019bab3023003375c6042004604a00460460020326eb8c084c078dd50008b1810180e9baa00116301f301c37540022c603c60366ea802858c074c068dd50091180e980f180f180f180f0009b8748018888c94ccc060c040c068dd50008a400026eb4c078c06cdd500099299980c1808180d1baa00114c103d87a8000132330010013756603e60386ea8008894ccc078004530103d87a80001323232533301d3371e00e6eb8c07c00c4c02ccc088dd4000a5eb804cc014014008dd6980f80118110011810000991980080080211299980e8008a6103d87a80001323232533301c3371e00e6eb8c07800c4c028cc084dd3000a5eb804cc014014008dd5980f0011810801180f80091191980080080191299980d8008a6103d87a80001323253330193005002130073301e0024bd70099802002000980f801180e8009ba5480008c060c0640048c05c004c044dd5005180a180a801180980098079baa00114984d958c94ccc02cc0140044c8c94ccc044c0500084c926533300d3007300f375400226464a666026602c0042649318040008b180a00098081baa00116163012001300e375400c2a666016600600226464a6660226028004264932999806980398079baa0011323232325333015301800213232498c02c008c94ccc048c03000454ccc058c054dd50020a4c2c2a66602460140022a66602c602a6ea80105261616301337540062c602c002602c004602800260206ea80045858c048004c038dd50030a9998059801000899192999808980a00109924c600c0022c6024002601c6ea801858c030dd50029b8748010dc3a40044a666010600460146ea80044c8c8c8c94ccc040c04c0084c926533300c3006300e375400626464a666024602a0042930b1bae3013001300f37540062c2c6eb4c044004c044008c03c004c02cdd50008b1b8748000dd7000ab9a5738aae7555cf2ab9f5740ae855d12ba41",
        [poolNftPolicy, delegationNft, utxoToConsume],
        {
          dataType: "list",
          items: [
            { dataType: "bytes" },
            {
              title: "AssetClass",
              description:
                "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
              anyOf: [
                {
                  title: "AssetClass",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "bytes", title: "policyId" },
                    { dataType: "bytes", title: "assetName" },
                  ],
                },
              ],
            },
            {
              title: "OutputReference",
              description:
                "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
              anyOf: [
                {
                  title: "OutputReference",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "transactionId",
                      description:
                        "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                      anyOf: [
                        {
                          title: "TransactionId",
                          dataType: "constructor",
                          index: 0,
                          fields: [{ dataType: "bytes", title: "hash" }],
                        },
                      ],
                    },
                    { dataType: "integer", title: "outputIndex" },
                  ],
                },
              ],
            },
          ],
        } as any,
      ),
    };
  },

  {
    redeemer: {
      title: "StakeRedeemer",
      anyOf: [
        {
          title: "Publish",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              anyOf: [
                {
                  title: "PublishRedeemer",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "poolOwnerOref",
                      description:
                        "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
                      anyOf: [
                        {
                          title: "OutputReference",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              title: "transactionId",
                              description:
                                "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                              anyOf: [
                                {
                                  title: "TransactionId",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    { dataType: "bytes", title: "hash" },
                                  ],
                                },
                              ],
                            },
                            { dataType: "integer", title: "outputIndex" },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        {
          title: "Withdraw",
          dataType: "constructor",
          index: 1,
          fields: [
            {
              anyOf: [
                {
                  title: "WithdrawalRedeemer",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "action",
                      anyOf: [
                        {
                          title: "ExactWithdrawal",
                          dataType: "constructor",
                          index: 0,
                          fields: [],
                        },
                        {
                          title: "SwapWithdrawal",
                          dataType: "constructor",
                          index: 1,
                          fields: [],
                        },
                      ],
                    },
                    {
                      title: "poolOref",
                      description:
                        "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
                      anyOf: [
                        {
                          title: "OutputReference",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              title: "transactionId",
                              description:
                                "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                              anyOf: [
                                {
                                  title: "TransactionId",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    { dataType: "bytes", title: "hash" },
                                  ],
                                },
                              ],
                            },
                            { dataType: "integer", title: "outputIndex" },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
        {
          title: "CreatePool",
          dataType: "constructor",
          index: 2,
          fields: [
            {
              description:
                "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
              anyOf: [
                {
                  title: "OutputReference",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "transactionId",
                      description:
                        "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                      anyOf: [
                        {
                          title: "TransactionId",
                          dataType: "constructor",
                          index: 0,
                          fields: [{ dataType: "bytes", title: "hash" }],
                        },
                      ],
                    },
                    { dataType: "integer", title: "outputIndex" },
                  ],
                },
              ],
            },
          ],
        },
      ],
    },
  },
) as unknown as PoolStakePoolStake;

export interface SmPoolSpend {
  new (delegatorNftPolicy: string, poolConfigScriptHash: string): Validator;
  datum: {
    params: {
      collateralAddress: {
        paymentCredential:
          | { VerificationKeyCredential: [string] }
          | { ScriptCredential: [string] };
        stakeCredential:
          | {
              Inline: [
                | { VerificationKeyCredential: [string] }
                | { ScriptCredential: [string] },
              ];
            }
          | {
              Pointer: {
                slotNumber: bigint;
                transactionIndex: bigint;
                certificateIndex: bigint;
              };
            }
          | null;
      };
      loanCs: { policyId: string; assetName: string };
      collateralCs: { policyId: string; assetName: string };
      oracleCollateralAsset: { policyId: string; assetName: string };
      oracleLoanAsset: { policyId: string; assetName: string };
      lpToken: { policyId: string; assetName: string };
      poolNftName: string;
      poolConfigAssetname: string;
    };
    balance: bigint;
    lentOut: bigint;
    totalLpTokens: bigint;
  };
  redeemer: {
    wrapper: {
      action:
        | {
            Continuing: [
              | { LpAdjust: { valueDelta: bigint; continuingOutput: bigint } }
              | {
                  Borrow: {
                    loanAmount: bigint;
                    collateralAmount: bigint;
                    borrowerTn: string;
                    interestRate: bigint;
                    continuingOutput: bigint;
                  };
                }
              | {
                  CloseLoan: {
                    loanAmount: bigint;
                    repayAmount: bigint;
                    continuingOutput: bigint;
                  };
                }
              | { PayFee: { fee: bigint; continuingOutput: bigint } },
            ];
          }
        | "Destroy";
      configRef: { transactionId: { hash: string }; outputIndex: bigint };
      order: { transactionId: { hash: string }; outputIndex: bigint } | null;
    };
  };
}

export const SmPoolSpend = Object.assign(
  function (delegatorNftPolicy: string, poolConfigScriptHash: string) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "",
        [delegatorNftPolicy, poolConfigScriptHash],
        {
          dataType: "list",
          items: [{ dataType: "bytes" }, { dataType: "bytes" }],
        } as any,
      ),
    };
  },
  {
    datum: {
      title: "Datum",
      anyOf: [
        {
          title: "Datum",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              title: "params",
              anyOf: [
                {
                  title: "Constants",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "collateralAddress",
                      description:
                        "A Cardano `Address` typically holding one or two credential references.\n\n Note that legacy bootstrap addresses (a.k.a. 'Byron addresses') are\n completely excluded from Plutus contexts. Thus, from an on-chain\n perspective only exists addresses of type 00, 01, ..., 07 as detailed\n in [CIP-0019 :: Shelley Addresses](https://github.com/cardano-foundation/CIPs/tree/master/CIP-0019/#shelley-addresses).",
                      anyOf: [
                        {
                          title: "Address",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              title: "paymentCredential",
                              description:
                                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                              anyOf: [
                                {
                                  title: "VerificationKeyCredential",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [{ dataType: "bytes" }],
                                },
                                {
                                  title: "ScriptCredential",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [{ dataType: "bytes" }],
                                },
                              ],
                            },
                            {
                              title: "stakeCredential",
                              anyOf: [
                                {
                                  title: "Some",
                                  description: "An optional value.",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    {
                                      description:
                                        "Represent a type of object that can be represented either inline (by hash)\n or via a reference (i.e. a pointer to an on-chain location).\n\n This is mainly use for capturing pointers to a stake credential\n registration certificate in the case of so-called pointer addresses.",
                                      anyOf: [
                                        {
                                          title: "Inline",
                                          dataType: "constructor",
                                          index: 0,
                                          fields: [
                                            {
                                              description:
                                                "A general structure for representing an on-chain `Credential`.\n\n Credentials are always one of two kinds: a direct public/private key\n pair, or a script (native or Plutus).",
                                              anyOf: [
                                                {
                                                  title:
                                                    "VerificationKeyCredential",
                                                  dataType: "constructor",
                                                  index: 0,
                                                  fields: [
                                                    { dataType: "bytes" },
                                                  ],
                                                },
                                                {
                                                  title: "ScriptCredential",
                                                  dataType: "constructor",
                                                  index: 1,
                                                  fields: [
                                                    { dataType: "bytes" },
                                                  ],
                                                },
                                              ],
                                            },
                                          ],
                                        },
                                        {
                                          title: "Pointer",
                                          dataType: "constructor",
                                          index: 1,
                                          fields: [
                                            {
                                              dataType: "integer",
                                              title: "slotNumber",
                                            },
                                            {
                                              dataType: "integer",
                                              title: "transactionIndex",
                                            },
                                            {
                                              dataType: "integer",
                                              title: "certificateIndex",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                  ],
                                },
                                {
                                  title: "None",
                                  description: "Nothing.",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [],
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    {
                      title: "loanCs",
                      description:
                        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                      anyOf: [
                        {
                          title: "AssetClass",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "bytes", title: "policyId" },
                            { dataType: "bytes", title: "assetName" },
                          ],
                        },
                      ],
                    },
                    {
                      title: "collateralCs",
                      description:
                        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                      anyOf: [
                        {
                          title: "AssetClass",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "bytes", title: "policyId" },
                            { dataType: "bytes", title: "assetName" },
                          ],
                        },
                      ],
                    },
                    {
                      title: "oracleCollateralAsset",
                      description:
                        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                      anyOf: [
                        {
                          title: "AssetClass",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "bytes", title: "policyId" },
                            { dataType: "bytes", title: "assetName" },
                          ],
                        },
                      ],
                    },
                    {
                      title: "oracleLoanAsset",
                      description:
                        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                      anyOf: [
                        {
                          title: "AssetClass",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "bytes", title: "policyId" },
                            { dataType: "bytes", title: "assetName" },
                          ],
                        },
                      ],
                    },
                    {
                      title: "lpToken",
                      description:
                        "There's got to be some functional way to do efficient checks on this.\n Consider experimenting after testnet.",
                      anyOf: [
                        {
                          title: "AssetClass",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            { dataType: "bytes", title: "policyId" },
                            { dataType: "bytes", title: "assetName" },
                          ],
                        },
                      ],
                    },
                    { dataType: "bytes", title: "poolNftName" },
                    { dataType: "bytes", title: "poolConfigAssetname" },
                  ],
                },
              ],
            },
            { dataType: "integer", title: "balance" },
            { dataType: "integer", title: "lentOut" },
            { dataType: "integer", title: "totalLpTokens" },
          ],
        },
      ],
    },
  },
  {
    redeemer: {
      title: "Wrapped Redeemer",
      description:
        "A redeemer wrapped in an extra constructor to make multi-validator detection possible on-chain.",
      anyOf: [
        {
          dataType: "constructor",
          index: 1,
          fields: [
            {
              anyOf: [
                {
                  title: "Redeemer",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    {
                      title: "action",
                      anyOf: [
                        {
                          title: "Continuing",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              anyOf: [
                                {
                                  title: "LpAdjust",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    {
                                      dataType: "integer",
                                      title: "valueDelta",
                                    },
                                    {
                                      dataType: "integer",
                                      title: "continuingOutput",
                                    },
                                  ],
                                },
                                {
                                  title: "Borrow",
                                  dataType: "constructor",
                                  index: 1,
                                  fields: [
                                    {
                                      dataType: "integer",
                                      title: "loanAmount",
                                    },
                                    {
                                      dataType: "integer",
                                      title: "collateralAmount",
                                    },
                                    { dataType: "bytes", title: "borrowerTn" },
                                    {
                                      dataType: "integer",
                                      title: "interestRate",
                                    },
                                    {
                                      dataType: "integer",
                                      title: "continuingOutput",
                                    },
                                  ],
                                },
                                {
                                  title: "CloseLoan",
                                  dataType: "constructor",
                                  index: 2,
                                  fields: [
                                    {
                                      dataType: "integer",
                                      title: "loanAmount",
                                    },
                                    {
                                      dataType: "integer",
                                      title: "repayAmount",
                                    },
                                    {
                                      dataType: "integer",
                                      title: "continuingOutput",
                                    },
                                  ],
                                },
                                {
                                  title: "PayFee",
                                  dataType: "constructor",
                                  index: 3,
                                  fields: [
                                    { dataType: "integer", title: "fee" },
                                    {
                                      dataType: "integer",
                                      title: "continuingOutput",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                        {
                          title: "Destroy",
                          dataType: "constructor",
                          index: 1,
                          fields: [],
                        },
                      ],
                    },
                    {
                      title: "configRef",
                      description:
                        "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
                      anyOf: [
                        {
                          title: "OutputReference",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              title: "transactionId",
                              description:
                                "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                              anyOf: [
                                {
                                  title: "TransactionId",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    { dataType: "bytes", title: "hash" },
                                  ],
                                },
                              ],
                            },
                            { dataType: "integer", title: "outputIndex" },
                          ],
                        },
                      ],
                    },
                    {
                      title: "order",
                      anyOf: [
                        {
                          title: "Some",
                          description: "An optional value.",
                          dataType: "constructor",
                          index: 0,
                          fields: [
                            {
                              description:
                                "An `OutputReference` is a unique reference to an output on-chain. The `output_index`\n corresponds to the position in the output list of the transaction (identified by its id)\n that produced that output",
                              anyOf: [
                                {
                                  title: "OutputReference",
                                  dataType: "constructor",
                                  index: 0,
                                  fields: [
                                    {
                                      title: "transactionId",
                                      description:
                                        "A unique transaction identifier, as the hash of a transaction body. Note that the transaction id\n isn't a direct hash of the `Transaction` as visible on-chain. Rather, they correspond to hash\n digests of transaction body as they are serialized on the network.",
                                      anyOf: [
                                        {
                                          title: "TransactionId",
                                          dataType: "constructor",
                                          index: 0,
                                          fields: [
                                            {
                                              dataType: "bytes",
                                              title: "hash",
                                            },
                                          ],
                                        },
                                      ],
                                    },
                                    {
                                      dataType: "integer",
                                      title: "outputIndex",
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                        {
                          title: "None",
                          description: "Nothing.",
                          dataType: "constructor",
                          index: 1,
                          fields: [],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
          ],
        },
      ],
    },
  },
) as unknown as SmPoolSpend;

export interface SmPoolMint {
  new (delegatorNftPolicy: string, poolConfigScriptHash: string): Validator;
  redeemer:
    | { MintPoolNFT: [{ outputIndex: bigint; initialPoolDelegation: string }] }
    | { BurnPoolNFT: [string] };
}

export const SmPoolMint = Object.assign(
  function (delegatorNftPolicy: string, poolConfigScriptHash: string) {
    return {
      type: "PlutusV2",
      script: applyParamsToScript(
        "",
        [delegatorNftPolicy, poolConfigScriptHash],
        {
          dataType: "list",
          items: [{ dataType: "bytes" }, { dataType: "bytes" }],
        } as any,
      ),
    };
  },

  {
    redeemer: {
      title: "PoolNFTAction",
      anyOf: [
        {
          title: "MintPoolNFT",
          dataType: "constructor",
          index: 0,
          fields: [
            {
              anyOf: [
                {
                  title: "PoolCreateDetails",
                  dataType: "constructor",
                  index: 0,
                  fields: [
                    { dataType: "integer", title: "outputIndex" },
                    { dataType: "bytes", title: "initialPoolDelegation" },
                  ],
                },
              ],
            },
          ],
        },
        {
          title: "BurnPoolNFT",
          dataType: "constructor",
          index: 1,
          fields: [{ dataType: "bytes" }],
        },
      ],
    },
  },
) as unknown as SmPoolMint;
